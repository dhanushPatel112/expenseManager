{"version":3,"sources":["config.js","auth/index.js","core/Menu.js","core/Layout.js","user/Signup.js","user/Signin.js","core/Home.js","core/Category.js","Expense/Expense.js","Income/Income.js","core/CreateCategory.js","core/UpdateCategory.js","auth/PrivateRoute.js","Expense/CreateExpense.js","Expense/UpdateExpense.js","Income/CreateIncome.js","Income/UpdateIncome.js","Routes.js","index.js"],"names":["API","process","signout","next","window","localStorage","removeItem","fetch","method","then","response","console","log","catch","err","isAuthenticated","getItem","JSON","parse","isActive","history","path","location","pathname","color","fontStyle","fontSize","fontFamily","padding","margin","withRouter","className","to","xmlns","width","height","fill","viewBox","d","fillRule","onClick","style","cursor","Layout","children","id","Signup","useState","name","email","phone","password","error","success","values","setValues","handleChange","event","target","value","clickSubmit","user","preventDefault","headers","body","stringify","json","data","display","htmlFor","onChange","type","placeholder","required","autoComplete","pattern","Signin","loading","redirectToReferrer","handelChange","signin","setItem","authenticate","e","info","redirectUser","Home","setExpense","setError","token","_id","fetchE","catId","a","Accept","Authorization","res","map","expense","useEffect","listExpense","userId","cat_res","all_cat","cat","forEach","Category","category","setCategory","setSuccess","whole_user_id","listCategory","ShowCat","cat_desc","cat_name","cat_type","createdAt","postedBy","user_id","deleteCat","cat_id","reload","textTransform","flex","flexDirection","backgroundColor","textAlign","c","i","length","position","flexWrap","alignContent","alignItems","bottom","Expense","ShowExpense","scope","trans_title","amount","format","trans_date","trans_desc","Income","income","setIncome","ShowIncome","listIncome","CreateCategory","props","match","params","list","setList","desc","handleTypeList","ty","createCategory","Dropdown","Toggle","variant","Menu","Item","UpdateCategory","categoryId","redirect","getCategory","init","PrivateRoute","Component","component","rest","render","state","from","CreateExpense","setCat","Date","createExpense","SelectCategory","isExpense","filter","UpdateExpense","trans_id","toISOString","substring","CreateIncome","UpdateIncome","isIncome","createIncome","Routes","handelLogin","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e55f260e.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;","import { API } from \"../config\"\r\n\r\nexport const signup = (user) => {\r\n    return fetch(`${API}/signup`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user),\r\n    })\r\n        .then((response) => {\r\n            return response.json()\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const signin = (user) => {\r\n    return fetch(`${API}/signin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user),\r\n    })\r\n        .then((response) => {\r\n            return response.json()\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.setItem(\"jwt\", JSON.stringify(data))\r\n        next()\r\n    }\r\n}\r\n\r\nexport const signout = (next) => {\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.removeItem(\"jwt\")\r\n        // next()\r\n        return fetch(`${API}/signout`, {\r\n            method: \"GET\",\r\n        })\r\n            .then((response) => {\r\n                console.log(\"signout\", response)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == \"undefined\") {\r\n        return false\r\n    }\r\n    if (localStorage.getItem(\"jwt\")) {\r\n        return JSON.parse(localStorage.getItem(\"jwt\"))\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n","/* eslint-disable jsx-a11y/iframe-has-title */\r\nimport React, { Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { isAuthenticated, signout } from \"../auth\";\r\n\r\nconst isActive = (history, path) => {\r\n  if (history.location.pathname === path) {\r\n    return {\r\n      color: \"#0000FF\",\r\n      fontStyle: \"\",\r\n      fontSize: \"22px\",\r\n      fontFamily: \"Verdana, sans-serif\",\r\n      padding: \"0px 10px\",\r\n      margin: \"0px auto\",\r\n    };\r\n  } else {\r\n    return {\r\n      color: \"#000000\",\r\n      fontSize: \"22px\",\r\n      fontFamily: \"Verdana, sans-serif\",\r\n      padding: \"0px 10px\",\r\n      margin: \"0px auto\",\r\n    };\r\n  }\r\n};\r\n\r\nconst newMenu = ({ history }) => {\r\n  return (\r\n    <div className=\"horizontal-menu\">\r\n      <nav className=\"navbar top-navbar\">\r\n        <div className=\"container\">\r\n          <div className=\"navbar-content\">\r\n            <Link to=\"/\" className=\"navbar-brand\">\r\n              Expense<span>Manager</span>\r\n            </Link>\r\n\r\n            <ul className=\"navbar-nav\">\r\n              {!isAuthenticated() && (\r\n                <Fragment>\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/signup\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-person-plus\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path d=\"M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\" />\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z\"\r\n                        />\r\n                      </svg>\r\n                      <span className=\"menu-title\">Signup</span>\r\n                    </Link>\r\n                  </li>\r\n                </Fragment>\r\n              )}\r\n              <li className=\"nav-item dropdown nav-apps\"></li>\r\n              {!isAuthenticated() && (\r\n                <Fragment>\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/signin\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-person\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path d=\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\" />\r\n                      </svg>\r\n                      <span className=\"menu-title\">Signin</span>\r\n                    </Link>\r\n                  </li>\r\n                </Fragment>\r\n              )}\r\n              <li className=\"nav-item dropdown nav-apps\"></li>\r\n              {isAuthenticated() && (\r\n                <Fragment>\r\n                  <div>\r\n                    <li className=\"nav-item\">\r\n                      <Link className=\"nav-link\" to=\"/signin\">\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          width=\"16\"\r\n                          height=\"16\"\r\n                          fill=\"currentColor\"\r\n                          className=\"bi bi-person-x\"\r\n                          viewBox=\"0 0 16 16\"\r\n                        >\r\n                          <path d=\"M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\" />\r\n                          <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M12.146 5.146a.5.5 0 0 1 .708 0L14 6.293l1.146-1.147a.5.5 0 0 1 .708.708L14.707 7l1.147 1.146a.5.5 0 0 1-.708.708L14 7.707l-1.146 1.147a.5.5 0 0 1-.708-.708L13.293 7l-1.147-1.146a.5.5 0 0 1 0-.708z\"\r\n                          />\r\n                        </svg>\r\n                        <span className=\"menu-title\" onClick={() => signout()}>\r\n                          Signout\r\n                        </span>\r\n                        {isAuthenticated() && (\r\n                          <li className=\"nav-item\">\r\n                            <span\r\n                              className=\"nav-link\"\r\n                              style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                              onClick={() =>\r\n                                signout(() => {\r\n                                  history.push(\"/\");\r\n                                })\r\n                              }\r\n                            >\r\n                              SignOut\r\n                            </span>\r\n                          </li>\r\n                        )}\r\n                      </Link>\r\n                    </li>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n              <li className=\"nav-item dropdown nav-apps\"></li>\r\n              </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <nav className=\"navbar top-navbar\">\r\n        <div className=\"container d-flex justify-content-center\">\r\n          <ul className=\"nav page-navigation\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-card-text\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M14.5 3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h13zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z\" />\r\n                  <path d=\"M3 5.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM3 8a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 8zm0 2.5a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5z\" />\r\n                </svg>\r\n                <span style={isActive(history, \"/\")} className=\"menu-title\">\r\n                  Dashboard\r\n                </span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/category\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-grid-1x2-fill\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M0 1a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V1zm9 0a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1h-5a1 1 0 0 1-1-1V1zm0 9a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1h-5a1 1 0 0 1-1-1v-5z\" />\r\n                </svg>\r\n                <span\r\n                  style={isActive(history, \"/category\")}\r\n                  className=\"menu-title\"\r\n                >\r\n                  Category\r\n                </span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/expense\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-file-plus\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M8.5 6a.5.5 0 0 0-1 0v1.5H6a.5.5 0 0 0 0 1h1.5V10a.5.5 0 0 0 1 0V8.5H10a.5.5 0 0 0 0-1H8.5V6z\" />\r\n                  <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2zm10-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1z\" />\r\n                </svg>\r\n                <span\r\n                  style={isActive(history, \"/expense\")}\r\n                  className=\"menu-title\"\r\n                >\r\n                  Expense\r\n                </span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/income\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-graph-up\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M0 0h1v15h15v1H0V0zm10 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V4.9l-3.613 4.417a.5.5 0 0 1-.74.037L7.06 6.767l-3.656 5.027a.5.5 0 0 1-.808-.588l4-5.5a.5.5 0 0 1 .758-.06l2.609 2.61L13.445 4H10.5a.5.5 0 0 1-.5-.5z\"\r\n                  />\r\n                </svg>\r\n                <span\r\n                  style={isActive(history, \"/income\")}\r\n                  className=\"menu-title\"\r\n                >\r\n                  Income\r\n                </span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Menu = ({ history }) => {\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark\">\r\n      <ul className=\"nav nav-tabs bg-primary\">\r\n        <li className=\"nav-items\">\r\n          <Link className=\"nav-link\" style={isActive(history, \"/\")} to=\"/\">\r\n            Home\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-items\">\r\n          <Link\r\n            className=\"nav-link\"\r\n            style={isActive(history, \"/signin\")}\r\n            to=\"/signin\"\r\n          >\r\n            Signin{\" \"}\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-items\">\r\n          <Link\r\n            className=\"nav-link\"\r\n            style={isActive(history, \"/signup\")}\r\n            to=\"/signup\"\r\n          >\r\n            Signup\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(newMenu);\r\n","import React from \"react\"\r\nimport Menu from \"./Menu\"\r\nimport './style.css';\r\n\r\n\r\nconst Layout = ({\r\n    className,\r\n    children,\r\n}) => {\r\n    const footer = () => (\r\n        <footer className='footer d-flex flex-column flex-md-row align-items-center justify-content-between' id='footer'>\r\n            <p className='text-muted text-center text-md-left'>\r\n                Copyright © 2021{\" \"}\r\n                . All rights reserved\r\n            </p>\r\n            <p className='text-muted text-center text-md-left mb-0 d-none d-md-block'>\r\n                Handcrafted With{\" \"}\r\n                <i\r\n                    className='mb-1 text-primary ml-1 icon-small'\r\n                    data-feather='heart'\r\n                ></i>\r\n            </p>\r\n        </footer>\r\n    )\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            <div className={className}>{children}</div>\r\n            {footer()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signup } from \"../auth\";\r\n\r\nconst Signup = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const { name, email, password, phone, error, success } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n    signup({ name, email, password, phone })\r\n      .then((data) => {\r\n        try {\r\n          if (data.error) {\r\n            setValues({ ...values, error: data.error, success: false });\r\n          } else {\r\n            setValues({\r\n              ...values,\r\n              name: \"\",\r\n              email: \"\",\r\n              password: \"\",\r\n              phone: \"\",\r\n              error: \"\",\r\n              success: true,\r\n            });\r\n          }\r\n        } catch {\r\n            setValues({ ...values, error: data, success: false });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setValues({ ...values, error: err, success: false });\r\n      });\r\n  };\r\n\r\n  const signUpForm = () => {\r\n    return (\r\n      <div className=\"main-wrapper\">\r\n        <div className=\"page-wrapper full-page\">\r\n          <div className=\"page-content d-flex align-items-center justify-content-center\">\r\n            <div className=\"row w-100 mx-0 auth-page\">\r\n              <div className=\"col-md-8 col-xl-6 mx-auto\">\r\n                <div className=\"card\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4 pr-md-0\">\r\n                      <div className=\"auth-left-wrapper\"></div>\r\n                    </div>\r\n                    <div className=\"col-md-8 pl-md-0\">\r\n                      <div className=\"auth-form-wrapper px-4 py-5\">\r\n                        <Link to=\"/\" className=\"noble-ui-logo d-block mb-2\">\r\n                          Expense<span>Manager</span>\r\n                        </Link>\r\n                        <h5 className=\"text-muted font-weight-normal mb-4\">\r\n                          Create a account.\r\n                        </h5>\r\n                        <form className=\"forms-sample\">\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleInputEmail1\">\r\n                              Email address\r\n                            </label>\r\n                            <input\r\n                              onChange={handleChange(\"email\")}\r\n                              type=\"email\"\r\n                              className=\"form-control\"\r\n                              id=\"exampleInputEmail1\"\r\n                              placeholder=\"Email\"\r\n                              value={email}\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleInputUsername1\">\r\n                              Full name\r\n                            </label>\r\n                            <input\r\n                              onChange={handleChange(\"name\")}\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              id=\"exampleInputUsername1\"\r\n                              autoComplete=\"Username\"\r\n                              placeholder=\"Jon Smith\"\r\n                              value={name}\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleInputPassword1\">\r\n                              Password\r\n                            </label>\r\n                            <input\r\n                              onChange={handleChange(\"password\")}\r\n                              type=\"password\"\r\n                              className=\"form-control\"\r\n                              id=\"exampleInputPassword1\"\r\n                              autoComplete=\"current-password\"\r\n                              placeholder=\"Password\"\r\n                              value={password}\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleInputPhone\">Phone</label>\r\n                            <input\r\n                              onChange={handleChange(\"phone\")}\r\n                              type=\"tel\"\r\n                              className=\"form-control\"\r\n                              id=\"exampleInputPhone\"\r\n                              placeholder=\"1234567890\"\r\n                              value={phone}\r\n                              required\r\n                              pattern=\"[0-9]{10}\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-3\">\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-primary mr-2 mb-2 mb-md-0\"\r\n                              onClick={clickSubmit}\r\n                            >\r\n                              Sing up\r\n                            </button>\r\n                          </div>\r\n                          <Link\r\n                            to=\"/signin\"\r\n                            className=\"d-block mt-3 text-muted\"\r\n                          >\r\n                            Already a user? Sign in\r\n                          </Link>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const showError = () => {\r\n    return (\r\n      <div\r\n        className=\"alert alert-fill-danger\"\r\n        style={{ display: error ? \"\" : \"none\" }}\r\n      >\r\n        <div>Error</div>\r\n        {error}\r\n      </div>\r\n    );\r\n  };\r\n  const showSuccess = () => {\r\n    return (\r\n      <div\r\n        className=\"alert alert-fill-success\"\r\n        style={{ display: success ? \"\" : \"none\" }}\r\n      >\r\n        <div>success full</div>\r\n        New account is created plz <Link to=\"/signin\">Signin</Link>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {showError()}\r\n      {showSuccess()}\r\n      {signUpForm()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Layout from \"../core/Layout\"\r\nimport { signin, authenticate, isAuthenticated } from \"../auth\"\r\n\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        loading: false,\r\n        redirectToReferrer: false,\r\n    })\r\n\r\n    const { email, password, loading, error, redirectToReferrer } = values\r\n    const { user } = isAuthenticated()\r\n\r\n    const handelChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false, loading: true })\r\n        signin({ email, password }).then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\", loading: false })\r\n            } else {\r\n                authenticate(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        redirectToReferrer: true,\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const signUpForm = () => (\r\n        <div className='main-wrapper'>\r\n            <div className='page-wrapper full-page'>\r\n                <div className='page-content d-flex align-items-center justify-content-center'>\r\n                    <div className='row w-100 mx-0 auth-page'>\r\n                        <div className='col-md-8 col-xl-6 mx-auto'>\r\n                            <div className='card'>\r\n                                <div className='row'>\r\n                                    <div className='col-md-4 pr-md-0'>\r\n                                        <div className='auth-left-wrapper'></div>\r\n                                    </div>\r\n                                    <div className='col-md-8 pl-md-0'>\r\n                                        <div className='auth-form-wrapper px-4 py-5'>\r\n                                            <Link\r\n                                                to='/'\r\n                                                className='noble-ui-logo d-block mb-2'\r\n                                            >\r\n                                                Expense<span>Manager</span>\r\n                                            </Link>\r\n                                            <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                Welcome back! Log in to your\r\n                                                account.\r\n                                            </h5>\r\n                                            <form className='forms-sample'>\r\n                                                <div className='form-group'>\r\n                                                    <label htmlFor='exampleInputEmail1'>\r\n                                                        Email address\r\n                                                    </label>\r\n                                                    <input\r\n                                                        type='email'\r\n                                                        onChange={handelChange(\r\n                                                            \"email\"\r\n                                                        )}\r\n                                                        className='form-control'\r\n                                                        id='exampleInputEmail1'\r\n                                                        placeholder='Email'\r\n                                                        value={email}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className='form-group'>\r\n                                                    <label htmlFor='exampleInputPassword1'>\r\n                                                        Password\r\n                                                    </label>\r\n                                                    <input\r\n                                                        type='password'\r\n                                                        className='form-control'\r\n                                                        onChange={handelChange(\r\n                                                            \"password\"\r\n                                                        )}\r\n                                                        id='exampleInputPassword1'\r\n                                                        autoComplete='current-password'\r\n                                                        placeholder='Password'\r\n                                                        value={password}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className='form-check form-check-flat form-check-primary'>\r\n                                                    <label className='form-check-label'>\r\n                                                        <input\r\n                                                            type='checkbox'\r\n                                                            className='form-check-input'\r\n                                                        />\r\n                                                        Remember me\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className='mt-3'>\r\n                                                    <button\r\n                                                        type='submit'\r\n                                                        className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                        onClick={clickSubmit}\r\n                                                    >\r\n                                                        Login\r\n                                                    </button>\r\n                                                </div>\r\n                                                <Link\r\n                                                    to='/signup'\r\n                                                    className='d-block mt-3 text-muted'\r\n                                                >\r\n                                                    Not a user? Sign up\r\n                                                </Link>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const showError = () => (\r\n        <div\r\n            className='alert alert-danger'\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n            {error}\r\n        </div>\r\n    )\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className='alert alert-info'>\r\n                <h2>Loading..</h2>\r\n            </div>\r\n        )\r\n\r\n    const redirectUser = (e) => {\r\n        if (redirectToReferrer) {\r\n            if (user) {\r\n                console.info(user, e)\r\n            }\r\n        }\r\n        if (isAuthenticated()) {\r\n            return <Redirect to='/' />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {showLoading()}\r\n            {showError()}\r\n            {signUpForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Signin\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport { API } from \"../config.js\";\r\nimport { authenticate, isAuthenticated } from \"../auth\";\r\n\r\nconst Home = () => {\r\n  const [expense, setExpense] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  const { token, user } = isAuthenticated() ? isAuthenticated() : null;\r\n  const { _id, email, name, phone } = user;\r\n  console.log(\"user \", user);\r\n  const fetchE = async (catId) => {\r\n    try {\r\n      const res = await fetch(`${API}/expense/list/${catId}/${_id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      const data = await res.json();\r\n      setExpense(\r\n        data.map((expense) => {\r\n          return expense;\r\n        })\r\n      );\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const listExpense = async (userId, token) => {\r\n      try {\r\n        const cat_res = await fetch(`${API}/category/${userId}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        const all_cat = await cat_res.json();\r\n        const id_cat = all_cat.map((cat) => cat._id);\r\n\r\n        id_cat.forEach((id) => fetchE(id));\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    };\r\n\r\n    listExpense(_id, token);\r\n  }, []);\r\n\r\n  return (\r\n    <Layout className=\"d-flex align-items-center\" >\r\n      <div className=\"container card text-center flex\">\r\n        <div className=\"card-header\">Welcome {name}</div>\r\n        <div className=\"card-body\">\r\n          <h6 className=\"card-text\"> Email : {email} &emsp; &emsp; Phone : {phone}</h6>\r\n          <p className=\"card-text\"></p>\r\n        </div>\r\n        <div className=\"card-footer text-muted\">Total Income : </div>\r\n        <div className=\"card-footer text-muted\">Total Expense : </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Layout from \"./Layout\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Category = () => {\r\n    const [category, setCategory] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const whole_user_id = isAuthenticated() ? isAuthenticated().user._id : null\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Deletion of Category Successful\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const id = isAuthenticated() ? isAuthenticated().user._id : null\r\n        const token = isAuthenticated() ? isAuthenticated().token : null\r\n\r\n        const listCategory = async (userId, token) => {\r\n            try {\r\n                const res = await fetch(`${API}/category/${userId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                const data = await res.json()\r\n                setCategory(\r\n                    data.map((cat) => {\r\n                        return cat\r\n                    })\r\n                )\r\n            } catch (err) {\r\n                setError(err)\r\n            }\r\n        }\r\n\r\n        listCategory(id, token)\r\n    }, [])\r\n\r\n    const ShowCat = ({\r\n        cat: {\r\n            cat_desc,\r\n            cat_name,\r\n            cat_type,\r\n            createdAt,\r\n            postedBy: { email, user_id },\r\n            _id,\r\n        },\r\n    }) => {\r\n        const deleteCat = async (cat_id, user_id, token) => {\r\n            try {\r\n                const res = await fetch(\r\n                    `${API}/category/${cat_id}/${user_id}`,\r\n                    {\r\n                        method: \"DELETE\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            Authorization: `Bearer ${token}`,\r\n                        },\r\n                    }\r\n                )\r\n                const data = await res.json()\r\n                if (!data) {\r\n                    setError({\r\n                        ...error,\r\n                        error: \"There is problem Deleting Category\",\r\n                    })\r\n                }\r\n                if (data) {\r\n                    setSuccess(true)\r\n                }\r\n                window.location.reload()\r\n            } catch (err) {\r\n                setError(err)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='card text-white bg-dark'>\r\n                <div\r\n                    className='card-title'\r\n                    style={{\r\n                        textTransform: \"uppercase\",\r\n                        fontSize: \"22px\",\r\n                        color: \"#d5dbed\",\r\n                        fontFamily: \"Gill Sans ,sans-serif,serif\",\r\n                    }}\r\n                >\r\n                    {cat_name}\r\n                </div>\r\n                <div\r\n                    className='card-body'\r\n                    style={{ margin: \"0px\", padding: \"0px\" }}\r\n                >\r\n                    <p\r\n                        className='card-text'\r\n                        style={{ color: \"#d5dbed\", fontFamily: \"cursive\" }}\r\n                    >\r\n                        Type : {cat_type}{\" \"}\r\n                    </p>\r\n                    <p\r\n                        className='card-text'\r\n                        style={{ color: \"#d5dbed\", fontFamily: \"cursive\" }}\r\n                    >\r\n                        Description : {cat_desc}\r\n                    </p>\r\n                </div>\r\n                <div style={{ flex: 1, flexDirection: \"row\" }}>\r\n                    <Link\r\n                        className='btn btn-danger btn-md'\r\n                        onClick={() => {\r\n                            deleteCat(\r\n                                _id,\r\n                                whole_user_id,\r\n                                isAuthenticated().token\r\n                            )\r\n                        }}\r\n                        style={{\r\n                            flex: 1,\r\n                            flexDirection: \"row\",\r\n                            backgroundColor: \"#b02a2a\",\r\n                            margin: \"15px\",\r\n                        }}\r\n                    >\r\n                        Delete Category\r\n                    </Link>\r\n                    <Link\r\n                        className='btn btn-danger btn-md'\r\n                        to={`/category/update/${_id}/${whole_user_id}`}\r\n                        style={{\r\n                            flex: 1,\r\n                            flexDirection: \"row\",\r\n                            backgroundColor: \"#b02a2a\",\r\n                            margin: \"15px\",\r\n                        }}\r\n                    >\r\n                        Update Category\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const id = isAuthenticated() ? isAuthenticated().user._id : null\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <div className='row' style={{ textAlign: \"center\" }}>\r\n                    <div className='col-12'>\r\n                        <div\r\n                            className='row center'\r\n                            style={{ textAlign: \"center\" }}\r\n                        >\r\n                            {category.map((c, i) => (\r\n                                <div\r\n                                    key={i}\r\n                                    className='col-4 mb-5'\r\n                                    style={{ padding: \"50px\" }}\r\n                                >\r\n                                    <ShowCat cat={c} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {showSuccess()}\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div>{error}</div>\r\n                {category.length && (\r\n                    <Link\r\n                        className='btn btn-primary btn-lg'\r\n                        id='button'\r\n                        style={{\r\n                            position: \"flex\",\r\n                            flexWrap: \"wrap\",\r\n                            alignContent: \"center\",\r\n                            alignItems: \"flex-end\",\r\n                        }}\r\n                        to={`/category/create/${id}`}\r\n                    >\r\n                        Create Category\r\n                    </Link>\r\n                )}\r\n                {!category.length && (\r\n                    <Link\r\n                        className='btn btn-primary btn-lg'\r\n                        id='button'\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            // top:\"50%\",\r\n                            bottom:\"10\",\r\n                            flexWrap: \"wrap\",\r\n                            alignContent: \"center\",\r\n                            alignItems: \"flex-end\",\r\n                        }}\r\n                        to={`/category/create/${id}`}\r\n                    >\r\n                        Create Category\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Category\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { isAuthenticated } from \"../auth\"\r\nimport { API } from \"../config\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport \"../core/style.css\"\r\n\r\nconst Expense = () => {\r\n    const [expense, setExpense] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const id = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n\r\n    const fetchE = async (catId) => {\r\n        try {\r\n            const res = await fetch(`${API}/expense/list/${catId}/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            const data = await res.json()\r\n            setExpense(\r\n                data.map((expense) => {\r\n                    return expense\r\n                })\r\n            )\r\n        } catch (err) {\r\n            setError(err)\r\n        }\r\n    }\r\n\r\n    const deleteCat = async (_id, cat_id, user_id, token) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/expense/${_id}/${cat_id}/${user_id}`,\r\n                {\r\n                    method: \"DELETE\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                }\r\n            )\r\n            const data = await res.json()\r\n            if (!data) {\r\n                setError({\r\n                    ...error,\r\n                    error: \"There is problem Deleting Category\",\r\n                })\r\n            }\r\n            if (data) {\r\n                setSuccess(true)\r\n            }\r\n            window.location.reload()\r\n        } catch (err) {\r\n            setError(err)\r\n        }\r\n    }\r\n\r\n    const ShowExpense = ({ e }) => {\r\n        return (\r\n            <tr>\r\n                <th scope='row'>{e.trans_title}</th>\r\n                <td>{e.amount}</td>\r\n                <Moment format={\"YYYY/MM/DD\"}>{e.trans_date}</Moment>\r\n                <td>{e.trans_desc}</td>\r\n                <td>\r\n                <Link\r\n                        className='btn btn-warning btn-md'\r\n                        to={`/expense/${e._id}/${e.cat_type._id}/${e.postedBy._id}`}\r\n                        style={{ flex: 1, flexDirection: \"row\" }}\r\n                    >\r\n                        Update Expense\r\n                    </Link>\r\n                </td>\r\n                <td>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-danger'\r\n                        onClick={() => {\r\n                            deleteCat(\r\n                                e._id,\r\n                                e.cat_type._id,\r\n                                isAuthenticated().user._id,\r\n                                isAuthenticated().token\r\n                            )\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Deletion of Category Successful\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const listExpense = async (userId, token) => {\r\n            try {\r\n                const cat_res = await fetch(`${API}/category/${userId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                const all_cat = await cat_res.json()\r\n                const id_cat = all_cat.map((cat) => cat._id)\r\n\r\n                id_cat.forEach((id) => fetchE(id))\r\n            } catch (err) {\r\n                setError(err)\r\n            }\r\n        }\r\n\r\n        listExpense(id, token)\r\n    }, [])\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <div className='row' style={{ textAlign: \"center\" }}>\r\n                    <div className='col-12'>\r\n                        <div className='center' style={{ textAlign: \"center\" }}>\r\n                            <table className='table container'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope='col'>Expense name</th>\r\n                                        <th scope='col'>Amount</th>\r\n                                        <th scope='col'>Date</th>\r\n                                        <th scope='col'>Description</th>\r\n                                        <th scope='col'>Update</th>\r\n                                        <th scope='col'>Delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {expense.map((e, i) => (\r\n                                        <ShowExpense e={e} />\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        {showSuccess()}\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div>{error}</div>\r\n\r\n                <Link\r\n                    className='btn btn-primary btn-lg center'\r\n                    style={{ textAlign: \"center\" }}\r\n                    to={`/expense/create/${id}`}\r\n                    id=\"exp_button\"\r\n                >\r\n                    Add expense\r\n                </Link>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Expense\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { isAuthenticated } from \"../auth\"\r\nimport { API } from \"../config\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport \"../core/style.css\"\r\n\r\nconst Income = () => {\r\n    const [income, setIncome] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const id = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n\r\n    const fetchE = async (catId) => {\r\n        try {\r\n            const res = await fetch(`${API}/income/list/${catId}/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            const data = await res.json()\r\n            setIncome(\r\n                data.map((income) => {\r\n                    return income\r\n                })\r\n            )\r\n        } catch (err) {\r\n            setError(err)\r\n        }\r\n    }\r\n\r\n    const deleteCat = async (_id, cat_id, user_id, token) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/income/${_id}/${cat_id}/${user_id}`,\r\n                {\r\n                    method: \"DELETE\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                }\r\n            )\r\n            const data = await res.json()\r\n            if (!data) {\r\n                setError({\r\n                    ...error,\r\n                    error: \"There is problem Deleting Category\",\r\n                })\r\n            }\r\n            if (data) {\r\n                setSuccess(true)\r\n            }\r\n            window.location.reload()\r\n        } catch (err) {\r\n            setError(err)\r\n        }\r\n    }\r\n\r\n    const ShowIncome = ({ e }) => {\r\n        return (\r\n            <tr>\r\n                <th scope='row'>{e.trans_title}</th>\r\n                <td>{e.amount}</td>\r\n                <Moment format={\"YYYY/MM/DD\"} >{e.trans_date}</Moment>\r\n                <td>{e.trans_desc}</td>\r\n                <td>\r\n                <Link\r\n                        className='btn btn-warning btn-md'\r\n                        to={`/income/${e._id}/${e.cat_type._id}/${e.postedBy._id}`}\r\n                        style={{ flex: 1, flexDirection: \"row\" }}\r\n                    >\r\n                        Update Income\r\n                    </Link>\r\n                </td>\r\n                <td>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-danger'\r\n                        onClick={() => {\r\n                            deleteCat(\r\n                                e._id,\r\n                                e.cat_type._id,\r\n                                isAuthenticated().user._id,\r\n                                isAuthenticated().token\r\n                            )\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Deletion of Income Successful\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const listIncome = async (userId, token) => {\r\n            try {\r\n                const cat_res = await fetch(`${API}/category/${userId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                const all_cat = await cat_res.json()\r\n                const id_cat = all_cat.map((cat) => cat._id)\r\n\r\n                id_cat.forEach((id) => fetchE(id))\r\n            } catch (err) {\r\n                setError(err)\r\n            }\r\n        }\r\n\r\n        listIncome(id, token)\r\n    }, [])\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <div className='row' style={{ textAlign: \"center\" }}>\r\n                    <div className='col-12'>\r\n                        <div className='center' style={{ textAlign: \"center\" }}>\r\n                            <table className='table container'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope='col'>income name</th>\r\n                                        <th scope='col'>Amount</th>\r\n                                        <th scope='col'>Date</th>\r\n                                        <th scope='col'>Description</th>\r\n                                        <th scope='col'>Update</th>\r\n                                        <th scope='col'>Delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {income.map((e, i) => (\r\n                                        <ShowIncome e={e} />\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        {showSuccess()}\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div>{error}</div>\r\n\r\n                <Link\r\n                    className='btn btn-primary btn-lg center'\r\n                    style={{ textAlign: \"center\" }}\r\n                    to={`/income/create/${id}`}\r\n                    id=\"exp_button\"\r\n                >\r\n                    Add Income\r\n                </Link>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Income\r\n","import React, { useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\nimport { Dropdown } from \"react-bootstrap\"\r\n\r\nconst CreateCategory = (props) => {\r\n    const userId = props.match.params.userId\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [list, setList] = useState(\"\")\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        desc: \"\",\r\n        error: \"\",\r\n        success: false,\r\n    })\r\n\r\n    const { name, desc, error, success } = values\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const handleTypeList = (ty) => (event) => {\r\n        setList(ty)\r\n    }\r\n\r\n    const createCategory = async (userId, token, type, { name, desc }) => {\r\n        try {\r\n            const res = await fetch(`${API}/category/create/${userId}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    cat_name: name,\r\n                    cat_type: type,\r\n                    cat_desc: desc,\r\n                }),\r\n            })\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: \"\",\r\n                    desc: \"\",\r\n                    error: \"\",\r\n                    success: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createCategory(userId, token, list, { name, desc })\r\n    }\r\n\r\n    const categoryForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Create category.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='nameCategory'>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"name\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='name'\r\n                                                            autoComplete='name'\r\n                                                            placeholder='Real estate'\r\n                                                            value={name}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <Dropdown>\r\n                                                            <Dropdown.Toggle\r\n                                                                variant='secondary'\r\n                                                                id='dropdown-basic'\r\n                                                            >\r\n                                                                Type\r\n                                                            </Dropdown.Toggle>\r\n\r\n                                                            <Dropdown.Menu>\r\n                                                                <Dropdown.Item\r\n                                                                    onClick={handleTypeList(\r\n                                                                        \"expense\"\r\n                                                                    )}\r\n                                                                >\r\n                                                                    Expense\r\n                                                                </Dropdown.Item>\r\n                                                                <Dropdown.Item\r\n                                                                    onClick={handleTypeList(\r\n                                                                        \"income\"\r\n                                                                    )}\r\n                                                                >\r\n                                                                    Income\r\n                                                                </Dropdown.Item>\r\n                                                                <Dropdown.Item\r\n                                                                    onClick={handleTypeList(\r\n                                                                        \"both\"\r\n                                                                    )}\r\n                                                                >\r\n                                                                    Both\r\n                                                                </Dropdown.Item>\r\n                                                            </Dropdown.Menu>\r\n                                                        </Dropdown>\r\n\r\n                                                        <div\r\n                                                            className='form-control'\r\n                                                            value={list}\r\n                                                        >\r\n                                                            {list}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='desc'\r\n                                                            autoComplete='desc'\r\n                                                            placeholder='information about cat'\r\n                                                            value={desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                New category is created click to view{\" \"}\r\n                <Link to='/category'>Category</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {categoryForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CreateCategory\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Layout from \"./Layout\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst UpdateCategory = (props) => {\r\n    const userId = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const catId = props.match.params.categoryId\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        desc: \"\",\r\n        type: \"\",\r\n        error: \"\",\r\n        success: false,\r\n        redirect: false,\r\n    })\r\n\r\n    const { name, desc, type, error, success, redirect } = values\r\n\r\n    const init = (catId, userId, token) => {\r\n        const getCategory = (catId, userId, token) => {\r\n            return fetch(`${API}/category/${catId}/${userId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .catch((err) => console.error(err))\r\n        }\r\n\r\n        getCategory(catId, userId, token, token).then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    name: data.cat_name,\r\n                    desc: data.cat_desc,\r\n                    type: data.cat_type,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(catId, userId, token)\r\n    }, [])\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createCategory = async (userId, token, { name, desc, type }) => {\r\n        try {\r\n            const res = await fetch(`${API}/category/${catId}/${userId}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    cat_name: name,\r\n                    cat_type: type,\r\n                    cat_desc: desc,\r\n                }),\r\n            })\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: \"\",\r\n                    desc: \"\",\r\n                    error: \"\",\r\n                    success: true,\r\n                    redirect: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createCategory(userId, token, { name, desc, type })\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirect) {\r\n            if (!error) {\r\n                return <Redirect to='/category' />\r\n            }\r\n        }\r\n    }\r\n\r\n    const categoryForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Update category.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='nameCategory'>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"name\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='name'\r\n                                                            name='name'\r\n                                                            autoComplete='name'\r\n                                                            placeholder='Real estate'\r\n                                                            value={name}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category Type\r\n                                                        </label>\r\n                                                        <select\r\n                                                            className='form-control'\r\n                                                            name='type'\r\n                                                            onChange={handleChange(\r\n                                                                \"type\"\r\n                                                            )}\r\n                                                            value={type}\r\n                                                        >\r\n                                                            <option>\r\n                                                                Please select\r\n                                                            </option>\r\n                                                            <option value='income'>\r\n                                                                income\r\n                                                            </option>\r\n                                                            <option value='expense'>\r\n                                                                expense\r\n                                                            </option>\r\n                                                            <option value='both'>\r\n                                                                both\r\n                                                            </option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='desc'\r\n                                                            autoComplete='desc'\r\n                                                            placeholder='information about cat'\r\n                                                            value={desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Update\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Category Updated.. click to view{\" \"}\r\n                <Link to='/category'>Category</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {categoryForm()} \r\n            {redirectUser()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UpdateCategory\r\n","import React,{Component} from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { isAuthenticated } from \"./index\"\r\n\r\nconst PrivateRoute = ({component: Component, ...rest }) => (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                isAuthenticated() ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/signin\",\r\n                            state: { from: props.location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        ></Route>\r\n    )\r\n\r\nexport default PrivateRoute\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst CreateExpense = (props) => {\r\n    const userId = props.match.params.userId\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [cat, setCat] = useState([])\r\n    const [values, setValues] = useState({\r\n        amount: 0,\r\n        trans_title: \"\",\r\n        trans_desc: \"\",\r\n        trans_date: new Date(),\r\n        cat_id: \"\",\r\n        error: \"\",\r\n        success: false,\r\n    })\r\n\r\n    const {\r\n        amount,\r\n        trans_title,\r\n        trans_desc,\r\n        trans_date,\r\n        cat_id,\r\n        error,\r\n        success,\r\n    } = values\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createExpense = async (\r\n        userId,\r\n        token,\r\n        { amount, trans_title, trans_desc, trans_date, cat_id }\r\n    ) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/expense/create/${cat_id}/${userId}`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        trans_title,\r\n                        trans_desc,\r\n                        trans_date,\r\n                        amount,\r\n                    }),\r\n                }\r\n            )\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    trans_title: \"\",\r\n                    trans_desc: \"\",\r\n                    trans_date: new Date(),\r\n                    amount: 0,\r\n                    error: \"\",\r\n                    success: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createExpense(userId, token, {\r\n            amount,\r\n            trans_title,\r\n            trans_desc,\r\n            trans_date,\r\n            cat_id,\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        return fetch(`${API}/category/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n    const SelectCategory = () => {\r\n        return (\r\n            <div>\r\n                <select\r\n                    className='form-control'\r\n                    name='cat_id'\r\n                    value={cat_id}\r\n                    onChange={handleChange(\"cat_id\")}\r\n                >\r\n                    <option>Please select</option>\r\n                    {cat &&\r\n                        cat.map((c, i) => (\r\n                            <option key={i} name={c.cat_name} value={c._id}>\r\n                                {c.cat_name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const isExpense = (cat) => {\r\n        if (cat.cat_type === \"expense\" || cat.cat_type === \"both\") {\r\n            return cat\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategories().then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\" })\r\n            } else {\r\n                setCat(data.filter(isExpense))\r\n\r\n                // if (data.cat_type === \"expense\" || data.cat_type === \"both\") {\r\n                // setCat(data)\r\n                // }\r\n            }\r\n        })\r\n    }, [values])\r\n\r\n    const categoryForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Create Expense.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='amount'>\r\n                                                            Expense amount\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"amount\"\r\n                                                            )}\r\n                                                            type='number'\r\n                                                            className='form-control'\r\n                                                            id='amount'\r\n                                                            placeholder='amount of transaction'\r\n                                                            value={amount}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_title'>\r\n                                                            Expense title\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_title\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='trans_title'\r\n                                                            placeholder='Car'\r\n                                                            value={trans_title}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <SelectCategory />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_date'>\r\n                                                            Date of transaction\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_date\"\r\n                                                            )}\r\n                                                            type='date'\r\n                                                            className='form-control'\r\n                                                            id='trans_date'\r\n                                                            autoComplete='trans_date'\r\n                                                            value={trans_date}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='trans_desc'\r\n                                                            autoComplete='trans_desc'\r\n                                                            placeholder='information about expense'\r\n                                                            value={trans_desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                New expense is created click to view{\" \"}\r\n                <Link to='/expense'>Expense</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showinfo = () => {\r\n        return <div>cat_id:{cat_id}</div>\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {/* {showinfo()} */}\r\n            {showError()}\r\n            {showSuccess()}\r\n            {categoryForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CreateExpense\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst UpdateExpense = (props) => {\r\n    const userId = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const catId = props.match.params.catId\r\n    const trans_id = props.match.params.trans_id\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [cat, setCat] = useState([])\r\n    const [values, setValues] = useState({\r\n        amount: 0,\r\n        trans_title: \"\",\r\n        trans_desc: \"\",\r\n        trans_date: new Date(),\r\n        cat_id: \"\",\r\n        error: \"\",\r\n        success: false,\r\n        redirect: false,\r\n    })\r\n\r\n    const {\r\n        amount,\r\n        trans_title,\r\n        trans_desc,\r\n        trans_date,\r\n        cat_id,\r\n        error,\r\n        success,\r\n        redirect,\r\n    } = values\r\n\r\n    const init = (userId, trans_id, token) => {\r\n        const getCategory = (userId, token) => {\r\n            return fetch(`${API}/expense/${trans_id}/${userId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .catch((err) => console.error(err))\r\n        }\r\n\r\n        getCategory(userId, token, token).then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                // populate the state\r\n                console.log(\"data get \", data)\r\n                let d = new Date(data.trans_date)\r\n                d = d.toISOString().substring(0, 10)\r\n                setValues({\r\n                    ...values,\r\n                    trans_title: data.trans_title,\r\n                    trans_desc: data.trans_desc,\r\n                    trans_date: d,\r\n                    amount: data.amount,\r\n                    cat_id: data.cat_type,\r\n                })\r\n                console.log(\"data set \", values)\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        return fetch(`${API}/category/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n    const isExpense = (cat) => {\r\n        if (cat.cat_type === \"expense\" || cat.cat_type === \"both\") {\r\n            return cat\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(userId, trans_id, token)\r\n        getCategories().then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\" })\r\n            } else {\r\n                setCat(data.filter(isExpense))\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createExpense = async (\r\n        userId,\r\n        token,\r\n        { amount, trans_title, trans_desc, trans_date, cat_id }\r\n    ) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/expense/${trans_id}/${catId}/${userId}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        trans_title: trans_title,\r\n                        trans_desc: trans_desc,\r\n                        trans_date: trans_date,\r\n                        amount: amount,\r\n                    }),\r\n                }\r\n            )\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    amount: 0,\r\n                    trans_title: \"\",\r\n                    trans_desc: \"\",\r\n                    trans_date: new Date(),\r\n                    cat_id: \"\",\r\n                    success: true,\r\n                    redirect: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createExpense(userId, token, {\r\n            amount,\r\n            trans_title,\r\n            trans_desc,\r\n            trans_date,\r\n            cat_id,\r\n        })\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirect) {\r\n            if (!error) {\r\n                return <Redirect to='/expense' />\r\n            }\r\n        }\r\n    }\r\n\r\n    const SelectCategory = () => {\r\n        return (\r\n            <div>\r\n                <select\r\n                    className='form-control'\r\n                    name='cat_id'\r\n                    value={cat_id}\r\n                    onChange={handleChange(\"cat_id\")}\r\n                >\r\n                    <option>Please select</option>\r\n                    {cat &&\r\n                        cat.map((c, i) => (\r\n                            <option key={i} name={c.cat_name} value={c._id}>\r\n                                {c.cat_name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const expenseForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Update Expense.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='amount'>\r\n                                                            Expense amount\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"amount\"\r\n                                                            )}\r\n                                                            type='number'\r\n                                                            className='form-control'\r\n                                                            id='amount'\r\n                                                            placeholder='amount of transaction'\r\n                                                            value={amount}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_title'>\r\n                                                            Expense title\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_title\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='trans_title'\r\n                                                            placeholder='Car'\r\n                                                            value={trans_title}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <SelectCategory />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_date'>\r\n                                                            Date of transaction\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_date\"\r\n                                                            )}\r\n                                                            type='date'\r\n                                                            className='form-control'\r\n                                                            id='trans_date'\r\n                                                            autoComplete='trans_date'\r\n                                                            value={trans_date}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='trans_desc'\r\n                                                            autoComplete='trans_desc'\r\n                                                            placeholder='information about expense'\r\n                                                            value={trans_desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Expense Updated.. click to view{\" \"}\r\n                <Link to='/expense'>Expense</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {expenseForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UpdateExpense\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst CreateIncome = (props) => {\r\n    const userId = props.match.params.userId\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [cat, setCat] = useState([])\r\n    const [values, setValues] = useState({\r\n        amount: 0,\r\n        trans_title: \"\",\r\n        trans_desc: \"\",\r\n        trans_date: new Date(),\r\n        cat_id: \"\",\r\n        error: \"\",\r\n        success: false,\r\n    })\r\n\r\n    const {\r\n        amount,\r\n        trans_title,\r\n        trans_desc,\r\n        trans_date,\r\n        cat_id,\r\n        error,\r\n        success,\r\n    } = values\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createExpense = async (\r\n        userId,\r\n        token,\r\n        { amount, trans_title, trans_desc, trans_date, cat_id }\r\n    ) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/income/create/${cat_id}/${userId}`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        trans_title,\r\n                        trans_desc,\r\n                        trans_date,\r\n                        amount,\r\n                    }),\r\n                }\r\n            )\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    trans_title: \"\",\r\n                    trans_desc: \"\",\r\n                    trans_date: new Date(),\r\n                    amount: 0,\r\n                    error: \"\",\r\n                    success: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createExpense(userId, token, {\r\n            amount,\r\n            trans_title,\r\n            trans_desc,\r\n            trans_date,\r\n            cat_id,\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        return fetch(`${API}/category/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n    const SelectCategory = () => {\r\n        return (\r\n            <div>\r\n                <select\r\n                    className='form-control'\r\n                    name='cat_id'\r\n                    value={cat_id}\r\n                    onChange={handleChange(\"cat_id\")}\r\n                >\r\n                    <option>Please select</option>\r\n                    {cat &&\r\n                        cat.map((c, i) => (\r\n                            <option key={i} name={c.cat_name} value={c._id}>\r\n                                {c.cat_name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const isExpense = (cat) => {\r\n        if (cat.cat_type === \"income\" || cat.cat_type === \"both\") {\r\n            return cat\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategories().then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\" })\r\n            } else {\r\n                setCat(data.filter(isExpense))\r\n\r\n                // if (data.cat_type === \"expense\" || data.cat_type === \"both\") {\r\n                // setCat(data)\r\n                // }\r\n            }\r\n        })\r\n    }, [values])\r\n\r\n    const categoryForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Create Income.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='amount'>\r\n                                                            Income amount\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"amount\"\r\n                                                            )}\r\n                                                            type='number'\r\n                                                            className='form-control'\r\n                                                            id='amount'\r\n                                                            placeholder='amount of transaction'\r\n                                                            value={amount}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_title'>\r\n                                                            Income title\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_title\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='trans_title'\r\n                                                            placeholder='Car'\r\n                                                            value={trans_title}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <SelectCategory />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_date'>\r\n                                                            Date of transaction\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_date\"\r\n                                                            )}\r\n                                                            type='date'\r\n                                                            className='form-control'\r\n                                                            id='trans_date'\r\n                                                            autoComplete='trans_date'\r\n                                                            value={trans_date}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='trans_desc'\r\n                                                            autoComplete='trans_desc'\r\n                                                            placeholder='information about expense'\r\n                                                            value={trans_desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                New income is created click to view{\" \"}\r\n                <Link to='/income'>Income</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showinfo = () => {\r\n        return <div>cat_id:{cat_id}</div>\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {/* {showinfo()} */}\r\n            {showError()}\r\n            {showSuccess()}\r\n            {categoryForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CreateIncome\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst UpdateIncome = (props) => {\r\n    const userId = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const catId = props.match.params.catId\r\n    const trans_id = props.match.params.trans_id\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [cat, setCat] = useState([])\r\n    const [values, setValues] = useState({\r\n        amount: 0,\r\n        trans_title: \"\",\r\n        trans_desc: \"\",\r\n        trans_date: new Date(),\r\n        cat_id: \"\",\r\n        error: \"\",\r\n        success: false,\r\n        redirect: false,\r\n    })\r\n\r\n    const {\r\n        amount,\r\n        trans_title,\r\n        trans_desc,\r\n        trans_date,\r\n        cat_id,\r\n        error,\r\n        success,\r\n        redirect,\r\n    } = values\r\n\r\n    const init = (userId, trans_id, token) => {\r\n        const getCategory = (userId, token) => {\r\n            return fetch(`${API}/income/${trans_id}/${userId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .catch((err) => console.error(err))\r\n        }\r\n\r\n        getCategory(userId, token, token).then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                // populate the state\r\n                console.log(\"data get \", data)\r\n                let d = new Date(data.trans_date)\r\n                d = d.toISOString().substring(0, 10)\r\n                setValues({\r\n                    ...values,\r\n                    trans_title: data.trans_title,\r\n                    trans_desc: data.trans_desc,\r\n                    trans_date: d,\r\n                    amount: data.amount,\r\n                    cat_id: data.cat_type,\r\n                })\r\n                console.log(\"data set \", trans_title,cat_id)\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        return fetch(`${API}/category/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n    const isIncome = (cat) => {\r\n        if (cat.cat_type === \"income\" || cat.cat_type === \"both\") {\r\n            return cat\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(userId, trans_id, token)\r\n        getCategories().then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\" })\r\n            } else {\r\n                setCat(data.filter(isIncome))\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createIncome = async (\r\n        userId,\r\n        token,\r\n        { amount, trans_title, trans_desc, trans_date, cat_id }\r\n    ) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/income/${trans_id}/${catId}/${userId}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        trans_title: trans_title,\r\n                        trans_desc: trans_desc,\r\n                        trans_date: trans_date,\r\n                        amount: amount,\r\n                    }),\r\n                }\r\n            )\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    amount: 0,\r\n                    trans_title: \"\",\r\n                    trans_desc: \"\",\r\n                    trans_date: new Date(),\r\n                    cat_id: \"\",\r\n                    success: true,\r\n                    redirect: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createIncome(userId, token, {\r\n            amount,\r\n            trans_title,\r\n            trans_desc,\r\n            trans_date,\r\n            cat_id,\r\n        })\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirect) {\r\n            if (!error) {\r\n                return <Redirect to='/income' />\r\n            }\r\n        }\r\n    }\r\n\r\n    const SelectCategory = () => {\r\n        return (\r\n            <div>\r\n                <select\r\n                    className='form-control'\r\n                    name='cat_id'\r\n                    onChange={handleChange(\"cat_id\")}\r\n                    value={cat_id}\r\n                >\r\n                    <option>Please select</option>\r\n                    {cat &&\r\n                        cat.map((c, i) => (\r\n                            <option key={i} name={c.cat_name} value={c._id}>\r\n                                {c.cat_name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const incomeForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Update Income.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='amount'>\r\n                                                            Income amount\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"amount\"\r\n                                                            )}\r\n                                                            type='number'\r\n                                                            className='form-control'\r\n                                                            id='amount'\r\n                                                            placeholder='amount of transaction'\r\n                                                            value={amount}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_title'>\r\n                                                            Income title\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_title\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='trans_title'\r\n                                                            placeholder='Car'\r\n                                                            value={trans_title}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <SelectCategory />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_date'>\r\n                                                            Date of transaction\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_date\"\r\n                                                            )}\r\n                                                            type='date'\r\n                                                            className='form-control'\r\n                                                            id='trans_date'\r\n                                                            autoComplete='trans_date'\r\n                                                            value={trans_date}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='trans_desc'\r\n                                                            autoComplete='trans_desc'\r\n                                                            placeholder='information about income'\r\n                                                            value={trans_desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Income Updated.. click to view{\" \"}\r\n                <Link to='/income'>Income</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {incomeForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UpdateIncome\r\n","import React from \"react\"\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\nimport Signup from \"./user/Signup.js\"\r\nimport Signin from \"./user/Signin.js\"\r\nimport Home from \"./core/Home.js\"\r\nimport Category from \"./core/Category\"\r\nimport Expense from \"./Expense/Expense\"\r\nimport Income from \"./Income/Income\"\r\nimport CreateCategory from \"./core/CreateCategory\"\r\nimport UpdateCategory from \"./core/UpdateCategory\"\r\nimport { isAuthenticated } from \"./auth\"\r\nimport PrivateRoute  from \"./auth/PrivateRoute.js\"\r\nimport CreateExpense from './Expense/CreateExpense'\r\nimport UpdateExpense from './Expense/UpdateExpense'\r\nimport CreateIncome from './Income/CreateIncome'\r\nimport UpdateIncome from './Income/UpdateIncome'\r\n\r\nconst Routes = () => {\r\n    const handelLogin = (e) => {\r\n        return isAuthenticated() ? true : false\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path='/signin' exact component={Signin} />\r\n                <Route path='/signup' exact component={Signup} />\r\n                <PrivateRoute path='/' exact component={Home} />\r\n                <PrivateRoute\r\n                    path='/category'\r\n                    handelLogin={handelLogin}\r\n                    exact\r\n                    component={Category}\r\n                />\r\n                <PrivateRoute\r\n                    path='/category/create/:userId'\r\n                    handelLogin={handelLogin}\r\n                    exact\r\n                    component={CreateCategory}\r\n                />\r\n                <PrivateRoute\r\n                    path='/category/update/:categoryId/:userId'\r\n                    handelLogin={handelLogin}\r\n                    exact\r\n                    component={UpdateCategory}\r\n                />\r\n                <PrivateRoute path='/expense' exact component={Expense} />\r\n                <PrivateRoute path='/expense/create/:userId' exact component={CreateExpense} />\r\n                <PrivateRoute path='/expense/:trans_id/:catId/:userId' exact component={UpdateExpense} />\r\n                <PrivateRoute path='/income' exact component={Income} />\r\n                <PrivateRoute path='/income/create/:userId' exact component={CreateIncome} />\r\n                <PrivateRoute path='/income/:trans_id/:catId/:userId' exact component={UpdateIncome} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\nimport 'bootstrap/dist/css/bootstrap.min.css' \n\nReactDOM.render(\n    <Routes />,\n  document.getElementById('root')\n);"],"sourceRoot":""}