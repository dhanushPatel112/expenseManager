{"version":3,"sources":["config.js","auth/index.js","core/Menu.js","core/Layout.js","user/Signup.js","user/Signin.js","core/Home.js","core/Category.js","Expense/Expense.js","Income/Income.js","core/CreateCategory.js","core/UpdateCategory.js","auth/PrivateRoute.js","Expense/CreateExpense.js","Expense/UpdateExpense.js","Income/CreateIncome.js","Income/UpdateIncome.js","Routes.js","index.js"],"names":["API","process","signout","next","window","localStorage","removeItem","fetch","method","then","response","console","log","catch","err","isAuthenticated","getItem","JSON","parse","isActive","history","path","location","pathname","color","fontStyle","fontSize","fontFamily","padding","margin","withRouter","className","onTouchMove","to","xmlns","width","height","fill","class","viewBox","d","fill-rule","onClick","style","cursor","id","role","data-toggle","aria-haspopup","aria-expanded","src","alt","aria-labelledby","data-feather","type","Layout","children","Signup","useState","name","email","phone","password","error","success","values","setValues","handleChange","event","target","value","clickSubmit","user","preventDefault","headers","Accept","body","stringify","json","data","display","for","onChange","autoComplete","placeholder","required","pattern","Signin","loading","redirectToReferrer","handelChange","signin","setItem","authenticate","htmlFor","e","info","redirectUser","Home","title","description","Category","category","setCategory","setError","setSuccess","whole_user_id","_id","useEffect","token","userId","a","Authorization","res","map","cat","listCategory","ShowCat","cat_desc","cat_name","cat_type","createdAt","postedBy","user_id","deleteCat","cat_id","reload","textTransform","flex","flexDirection","backgroundColor","textAlign","c","i","length","position","flexWrap","alignContent","alignItems","bottom","Expense","expense","setExpense","fetchE","catId","ShowExpense","scope","trans_title","amount","format","trans_date","trans_desc","cat_res","all_cat","forEach","listExpense","Income","income","setIncome","ShowIncome","listIncome","CreateCategory","props","match","params","list","setList","desc","handleTypeList","ty","createCategory","Dropdown","Toggle","variant","Menu","Item","UpdateCategory","categoryId","redirect","getCategory","init","PrivateRoute","Component","component","rest","render","state","from","CreateExpense","setCat","Date","createExpense","SelectCategory","isExpense","filter","UpdateExpense","trans_id","toISOString","substring","CreateIncome","UpdateIncome","isIncome","createIncome","Routes","handelLogin","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d9f36707.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;","import { API } from \"../config\"\r\n\r\nexport const signup = (user) => {\r\n    return fetch(`${API}/signup`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user),\r\n    })\r\n        .then((response) => {\r\n            return response.json()\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const signin = (user) => {\r\n    return fetch(`${API}/signin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user),\r\n    })\r\n        .then((response) => {\r\n            return response.json()\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.setItem(\"jwt\", JSON.stringify(data))\r\n        next()\r\n    }\r\n}\r\n\r\nexport const signout = (next) => {\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.removeItem(\"jwt\")\r\n        // next()\r\n        return fetch(`${API}/signout`, {\r\n            method: \"GET\",\r\n        })\r\n            .then((response) => {\r\n                console.log(\"signout\", response)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == \"undefined\") {\r\n        return false\r\n    }\r\n    if (localStorage.getItem(\"jwt\")) {\r\n        return JSON.parse(localStorage.getItem(\"jwt\"))\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n","/* eslint-disable jsx-a11y/iframe-has-title */\r\nimport React, { Fragment } from \"react\"\r\nimport { Link, withRouter } from \"react-router-dom\"\r\nimport { isAuthenticated, signout } from \"../auth\"\r\n\r\nconst isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n        return { color: \"#0000FF\",fontStyle:\"\",fontSize:\"22px\",fontFamily: \"Verdana, sans-serif\",padding:\"0px 10px\",margin:\"0px auto\" }\r\n    } else {\r\n        return { color: \"#000000\",fontSize:\"22px\" ,fontFamily: \"Verdana, sans-serif\",padding:\"0px 10px\",margin:\"0px auto\" }\r\n    }\r\n}\r\n\r\nconst newMenu = ({ history }) => {\r\n    return (\r\n        <div className='horizontal-menu'>\r\n            <nav className='navbar top-navbar'>\r\n                <div className='container'>\r\n                    <div className='navbar-content'>\r\n                        <Link onTouchMove='/' className='navbar-brand'>\r\n                            Expense<span>Manager</span>\r\n                        </Link>\r\n\r\n                        <ul className='navbar-nav'>\r\n                            {!isAuthenticated() && (\r\n                                <Fragment>\r\n                                    <li className='nav-item'>\r\n                                        <Link className='nav-link' to='/signup'>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-person-plus\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"/>\r\n  <path fill-rule=\"evenodd\" d=\"M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z\"/>\r\n</svg>\r\n                                            <span className='menu-title'>\r\n                                                Signup\r\n                                            </span>\r\n                                        </Link>\r\n                                    </li>\r\n                                </Fragment>\r\n                            )}\r\n                            <li className='nav-item dropdown nav-apps'></li>\r\n                            {!isAuthenticated() && (\r\n                                <Fragment>\r\n                                    <li className='nav-item'>\r\n                                        <Link className='nav-link' to='/signin'>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-person\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"/>\r\n</svg>\r\n                                            <span className='menu-title'>\r\n                                                Signin\r\n                                            </span>\r\n                                        </Link>\r\n                                    </li>\r\n                                </Fragment>\r\n                            )}\r\n                            <li className='nav-item dropdown nav-apps'></li>\r\n                            {isAuthenticated() && (\r\n                                <Fragment>\r\n                                    <div><li className='nav-item'>\r\n                                        <Link className='nav-link' to='/signin'>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-person-x\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"/>\r\n  <path fill-rule=\"evenodd\" d=\"M12.146 5.146a.5.5 0 0 1 .708 0L14 6.293l1.146-1.147a.5.5 0 0 1 .708.708L14.707 7l1.147 1.146a.5.5 0 0 1-.708.708L14 7.707l-1.146 1.147a.5.5 0 0 1-.708-.708L13.293 7l-1.147-1.146a.5.5 0 0 1 0-.708z\"/>\r\n</svg>\r\n                                            <span\r\n                                                className='menu-title'\r\n                                                onClick={() => signout()}\r\n                                            >\r\n                                                Signout\r\n                                            </span>\r\n                                            {isAuthenticated() && (\r\n                                            <li className='nav-item'>\r\n                                                <span\r\n                                                    className='nav-link'\r\n                                                    style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                                                    onClick={() =>\r\n                                                        signout(() => {\r\n                                                            history.push(\"/\")\r\n                                                })\r\n                                            }\r\n                    >\r\n                        SignOut\r\n                    </span>\r\n                </li>\r\n            )}\r\n                                        </Link>\r\n                                    </li></div>\r\n                                </Fragment>\r\n                            )}\r\n                            <li className='nav-item dropdown nav-apps'></li>\r\n                            <li className='nav-item dropdown nav-profile'>\r\n                                <Link\r\n                                    className='nav-link dropdown-toggle'\r\n                                    to='/'\r\n                                    id='profileDropdown'\r\n                                    role='button'\r\n                                    data-toggle='dropdown'\r\n                                    aria-haspopup='true'\r\n                                    aria-expanded='false'\r\n                                >\r\n                                    <img\r\n                                        src='https://via.placeholder.com/30x30'\r\n                                        alt='profile'\r\n                                    />\r\n                                </Link>\r\n                                <div\r\n                                    className='dropdown-menu'\r\n                                    aria-labelledby='profileDropdown'\r\n                                >\r\n                                    <div className='dropdown-header d-flex flex-column align-items-center'>\r\n                                        <div className='figure mb-3'>\r\n                                            <img\r\n                                                src='https://via.placeholder.com/80x80'\r\n                                                alt=''\r\n                                            />\r\n                                        </div>\r\n                                        <div className='info text-center'>\r\n                                            <p className='name font-weight-bold mb-0'>\r\n                                               User profile name\r\n                                            </p>\r\n                                            <p className='email text-muted mb-3'>\r\n                                                test@gmail.com\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='dropdown-body'>\r\n                                        <ul className='profile-nav p-0 pt-3'>\r\n                                            <li className='nav-item'>\r\n                                                <Link\r\n                                                    to='pages/general/profile.html'\r\n                                                    className='nav-link'\r\n                                                >\r\n                                                    <i data-feather='user'></i>\r\n                                                    <span>Profile</span>\r\n                                                </Link>\r\n                                            </li>\r\n                                            <li className='nav-item'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='nav-link'\r\n                                                >\r\n                                                    <i data-feather='edit'></i>\r\n                                                    <span>Edit Profile</span>\r\n                                                </Link>\r\n                                            </li>\r\n                                            <li className='nav-item'>\r\n                                                <Link\r\n                                                    to='/signin'\r\n                                                    className='nav-link'\r\n                                                >\r\n                                                    <i data-feather='repeat'></i>\r\n                                                    <span>Switch User</span>\r\n                                                </Link>\r\n                                            </li>\r\n                                            <li className='nav-item'>\r\n                                                <Link\r\n                                                    to='/signout'\r\n                                                    className='nav-link'\r\n                                                >\r\n                                                    <i data-feather='log-out'></i>\r\n                                                    <span>Log Out</span>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                        <button\r\n                            className='navbar-toggler navbar-toggler-right d-lg-none align-self-center'\r\n                            type='button'\r\n                            data-toggle='horizontal-menu-toggle'\r\n                        >\r\n                            <i data-feather='menu'></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <nav className='bottom-navbar'>\r\n                <div className='container'>\r\n                    <ul className='nav page-navigation'>\r\n                        <li className='nav-item'>\r\n                            <Link className='nav-link' to='/'>\r\n                                <svg\r\n                                    xmlns='http://www.w3.org/2000/svg'\r\n                                    width='16'\r\n                                    height='16'\r\n                                    fill='currentColor'\r\n                                    class='bi bi-card-text'\r\n                                    viewBox='0 0 16 16'\r\n                                >\r\n                                    <path d='M14.5 3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h13zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z' />\r\n                                    <path d='M3 5.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM3 8a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 8zm0 2.5a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5z' />\r\n                                </svg>\r\n                                <span style={isActive(history, \"/\")} className='menu-title'>Dashboard</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link className='nav-link' to='/category'>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-grid-1x2-fill\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M0 1a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V1zm9 0a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1h-5a1 1 0 0 1-1-1V1zm0 9a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1h-5a1 1 0 0 1-1-1v-5z\"/>\r\n</svg>\r\n                                <span style={isActive(history, \"/category\")} className='menu-title'>Category</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link className='nav-link' to='/expense'>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-file-plus\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M8.5 6a.5.5 0 0 0-1 0v1.5H6a.5.5 0 0 0 0 1h1.5V10a.5.5 0 0 0 1 0V8.5H10a.5.5 0 0 0 0-1H8.5V6z\"/>\r\n  <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2zm10-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1z\"/>\r\n</svg>\r\n                                <span style={isActive(history, \"/expense\")} className='menu-title'>Expense</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link className='nav-link' to='/income'>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-graph-up\" viewBox=\"0 0 16 16\">\r\n  <path fill-rule=\"evenodd\" d=\"M0 0h1v15h15v1H0V0zm10 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V4.9l-3.613 4.417a.5.5 0 0 1-.74.037L7.06 6.767l-3.656 5.027a.5.5 0 0 1-.808-.588l4-5.5a.5.5 0 0 1 .758-.06l2.609 2.61L13.445 4H10.5a.5.5 0 0 1-.5-.5z\"/>\r\n</svg>\r\n                                <span style={isActive(history, \"/income\")} className='menu-title'>Income</span>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Menu = ({ history }) => {\r\n    return (\r\n        <div className='navbar navbar-dark bg-dark'>\r\n            <ul className='nav nav-tabs bg-primary'>\r\n                <li className='nav-items'>\r\n                    <Link\r\n                        className='nav-link'\r\n                        style={isActive(history, \"/\")}\r\n                        to='/'\r\n                    >\r\n                        Home\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-items'>\r\n                    <Link\r\n                        className='nav-link'\r\n                        style={isActive(history, \"/signin\")}\r\n                        to='/signin'\r\n                    >\r\n                        Signin{\" \"}\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-items'>\r\n                    <Link\r\n                        className='nav-link'\r\n                        style={isActive(history, \"/signup\")}\r\n                        to='/signup'\r\n                    >\r\n                        Signup\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(newMenu)\r\n","import React from \"react\"\r\nimport Menu from \"./Menu\"\r\nimport './style.css';\r\n\r\n\r\nconst Layout = ({\r\n    className,\r\n    children,\r\n}) => {\r\n    const footer = () => (\r\n        <footer className='footer d-flex flex-column flex-md-row align-items-center justify-content-between' id='footer'>\r\n            <p className='text-muted text-center text-md-left'>\r\n                Copyright © 2021{\" \"}\r\n                . All rights reserved\r\n            </p>\r\n            <p className='text-muted text-center text-md-left mb-0 d-none d-md-block'>\r\n                Handcrafted With{\" \"}\r\n                <i\r\n                    className='mb-1 text-primary ml-1 icon-small'\r\n                    data-feather='heart'\r\n                ></i>\r\n            </p>\r\n        </footer>\r\n    )\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            <div className={className}>{children}</div>\r\n            {footer()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React, { useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { signup } from \"../auth\"\r\n\r\nconst Signup = () => {\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        success: false,\r\n    })\r\n\r\n    const { name, email, password, phone, error, success } = values\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        signup({ name, email, password, phone }).then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, success: false })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    phone: \"\",\r\n                    error: \"\",\r\n                    success: true,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const signUpForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Create a account.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label for='exampleInputUsername1'>\r\n                                                            Full name\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"name\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='exampleInputUsername1'\r\n                                                            autoComplete='Username'\r\n                                                            placeholder='Jon Smith'\r\n                                                            value={name}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label for='exampleInputEmail1'>\r\n                                                            Email address\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"email\"\r\n                                                            )}\r\n                                                            type='email'\r\n                                                            className='form-control'\r\n                                                            id='exampleInputEmail1'\r\n                                                            placeholder='Email'\r\n                                                            value={email}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label for='exampleInputPassword1'>\r\n                                                            Password\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"password\"\r\n                                                            )}\r\n                                                            type='password'\r\n                                                            className='form-control'\r\n                                                            id='exampleInputPassword1'\r\n                                                            autoComplete='current-password'\r\n                                                            placeholder='Password'\r\n                                                            value={password}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label for='exampleInputPhone'>\r\n                                                            Phone\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"phone\"\r\n                                                            )}\r\n                                                            type='tel'\r\n                                                            className='form-control'\r\n                                                            id='exampleInputPhone'\r\n                                                            placeholder='1234567890'\r\n                                                            value={phone}\r\n                                                            required\r\n                                                            pattern='[0-9]{10}'\r\n                                                        />\r\n                                                    </div>\r\n                                                    {/* <div className='form-check form-check-flat form-check-primary'>\r\n                                                        <label className='form-check-label'>\r\n                                                            <input\r\n                                                                type='checkbox'\r\n                                                                className='form-check-input'\r\n                                                            />\r\n                                                            Remember me\r\n                                                        </label>\r\n                                                    </div> */}\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Sing up\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <Link\r\n                                                        to='/signin'\r\n                                                        className='d-block mt-3 text-muted'\r\n                                                    >\r\n                                                        Already a user? Sign in\r\n                                                    </Link>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                <div>Error</div>\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                <div>success full</div>\r\n                New account is created plz <Link to='/signin'>Signin</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {signUpForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React, { useState } from \"react\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport Layout from \"../core/Layout\"\r\nimport { signin, authenticate, isAuthenticated } from \"../auth\"\r\n\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        loading: false,\r\n        redirectToReferrer: false,\r\n    })\r\n\r\n    const { email, password, loading, error, redirectToReferrer } = values\r\n    const { user } = isAuthenticated()\r\n\r\n    const handelChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false, loading: true })\r\n        signin({ email, password }).then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\", loading: false })\r\n            } else {\r\n                authenticate(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        redirectToReferrer: true,\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const signUpForm = () => (\r\n        <div className='main-wrapper'>\r\n            <div className='page-wrapper full-page'>\r\n                <div className='page-content d-flex align-items-center justify-content-center'>\r\n                    <div className='row w-100 mx-0 auth-page'>\r\n                        <div className='col-md-8 col-xl-6 mx-auto'>\r\n                            <div className='card'>\r\n                                <div className='row'>\r\n                                    <div className='col-md-4 pr-md-0'>\r\n                                        <div className='auth-left-wrapper'></div>\r\n                                    </div>\r\n                                    <div className='col-md-8 pl-md-0'>\r\n                                        <div className='auth-form-wrapper px-4 py-5'>\r\n                                            <Link\r\n                                                to='/'\r\n                                                className='noble-ui-logo d-block mb-2'\r\n                                            >\r\n                                                Expense<span>Manager</span>\r\n                                            </Link>\r\n                                            <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                Welcome back! Log in to your\r\n                                                account.\r\n                                            </h5>\r\n                                            <form className='forms-sample'>\r\n                                                <div className='form-group'>\r\n                                                    <label htmlFor='exampleInputEmail1'>\r\n                                                        Email address\r\n                                                    </label>\r\n                                                    <input\r\n                                                        type='email'\r\n                                                        onChange={handelChange(\r\n                                                            \"email\"\r\n                                                        )}\r\n                                                        className='form-control'\r\n                                                        id='exampleInputEmail1'\r\n                                                        placeholder='Email'\r\n                                                        value={email}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className='form-group'>\r\n                                                    <label htmlFor='exampleInputPassword1'>\r\n                                                        Password\r\n                                                    </label>\r\n                                                    <input\r\n                                                        type='password'\r\n                                                        className='form-control'\r\n                                                        onChange={handelChange(\r\n                                                            \"password\"\r\n                                                        )}\r\n                                                        id='exampleInputPassword1'\r\n                                                        autoComplete='current-password'\r\n                                                        placeholder='Password'\r\n                                                        value={password}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className='form-check form-check-flat form-check-primary'>\r\n                                                    <label className='form-check-label'>\r\n                                                        <input\r\n                                                            type='checkbox'\r\n                                                            className='form-check-input'\r\n                                                        />\r\n                                                        Remember me\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className='mt-3'>\r\n                                                    <button\r\n                                                        type='submit'\r\n                                                        className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                        onClick={clickSubmit}\r\n                                                    >\r\n                                                        Login\r\n                                                    </button>\r\n                                                </div>\r\n                                                <Link\r\n                                                    to='/signup'\r\n                                                    className='d-block mt-3 text-muted'\r\n                                                >\r\n                                                    Not a user? Sign up\r\n                                                </Link>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const showError = () => (\r\n        <div\r\n            className='alert alert-danger'\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n            {error}\r\n        </div>\r\n    )\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className='alert alert-info'>\r\n                <h2>Loading..</h2>\r\n            </div>\r\n        )\r\n\r\n    const redirectUser = (e) => {\r\n        if (redirectToReferrer) {\r\n            if (user) {\r\n                console.info(user, e)\r\n            }\r\n        }\r\n        if (isAuthenticated()) {\r\n            return <Redirect to='/' />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {showLoading()}\r\n            {showError()}\r\n            {signUpForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Signin\r\n","import React from 'react'\r\nimport Layout from './Layout'\r\n\r\nconst Home = () => \r\n     (\r\n        <Layout title=\"Home page\" description=\"Expense manager\" >\r\n            EXPENSE MANAGER\r\n            \r\n        </Layout>\r\n    )\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Layout from \"./Layout\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Category = () => {\r\n    const [category, setCategory] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const whole_user_id = isAuthenticated() ? isAuthenticated().user._id : null\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Deletion of Category Successful\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const id = isAuthenticated() ? isAuthenticated().user._id : null\r\n        const token = isAuthenticated() ? isAuthenticated().token : null\r\n\r\n        const listCategory = async (userId, token) => {\r\n            try {\r\n                const res = await fetch(`${API}/category/${userId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                const data = await res.json()\r\n                setCategory(\r\n                    data.map((cat) => {\r\n                        return cat\r\n                    })\r\n                )\r\n            } catch (err) {\r\n                setError(err)\r\n            }\r\n        }\r\n\r\n        listCategory(id, token)\r\n    }, [])\r\n\r\n    const ShowCat = ({\r\n        cat: {\r\n            cat_desc,\r\n            cat_name,\r\n            cat_type,\r\n            createdAt,\r\n            postedBy: { email, user_id },\r\n            _id,\r\n        },\r\n    }) => {\r\n        const deleteCat = async (cat_id, user_id, token) => {\r\n            try {\r\n                const res = await fetch(\r\n                    `${API}/category/${cat_id}/${user_id}`,\r\n                    {\r\n                        method: \"DELETE\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            Authorization: `Bearer ${token}`,\r\n                        },\r\n                    }\r\n                )\r\n                const data = await res.json()\r\n                if (!data) {\r\n                    setError({\r\n                        ...error,\r\n                        error: \"There is problem Deleting Category\",\r\n                    })\r\n                }\r\n                if (data) {\r\n                    setSuccess(true)\r\n                }\r\n                window.location.reload()\r\n            } catch (err) {\r\n                setError(err)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='card text-white bg-dark'>\r\n                <div\r\n                    className='card-title'\r\n                    style={{\r\n                        textTransform: \"uppercase\",\r\n                        fontSize: \"22px\",\r\n                        color: \"#d5dbed\",\r\n                        fontFamily: \"Gill Sans ,sans-serif,serif\",\r\n                    }}\r\n                >\r\n                    {cat_name}\r\n                </div>\r\n                <div\r\n                    className='card-body'\r\n                    style={{ margin: \"0px\", padding: \"0px\" }}\r\n                >\r\n                    <p\r\n                        className='card-text'\r\n                        style={{ color: \"#d5dbed\", fontFamily: \"cursive\" }}\r\n                    >\r\n                        Type : {cat_type}{\" \"}\r\n                    </p>\r\n                    <p\r\n                        className='card-text'\r\n                        style={{ color: \"#d5dbed\", fontFamily: \"cursive\" }}\r\n                    >\r\n                        Description : {cat_desc}\r\n                    </p>\r\n                </div>\r\n                <div style={{ flex: 1, flexDirection: \"row\" }}>\r\n                    <Link\r\n                        className='btn btn-danger btn-md'\r\n                        onClick={() => {\r\n                            deleteCat(\r\n                                _id,\r\n                                whole_user_id,\r\n                                isAuthenticated().token\r\n                            )\r\n                        }}\r\n                        style={{\r\n                            flex: 1,\r\n                            flexDirection: \"row\",\r\n                            backgroundColor: \"#b02a2a\",\r\n                            margin: \"15px\",\r\n                        }}\r\n                    >\r\n                        Delete Category\r\n                    </Link>\r\n                    <Link\r\n                        className='btn btn-danger btn-md'\r\n                        to={`/category/update/${_id}/${whole_user_id}`}\r\n                        style={{\r\n                            flex: 1,\r\n                            flexDirection: \"row\",\r\n                            backgroundColor: \"#b02a2a\",\r\n                            margin: \"15px\",\r\n                        }}\r\n                    >\r\n                        Update Category\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const id = isAuthenticated() ? isAuthenticated().user._id : null\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <div className='row' style={{ textAlign: \"center\" }}>\r\n                    <div className='col-12'>\r\n                        <div\r\n                            className='row center'\r\n                            style={{ textAlign: \"center\" }}\r\n                        >\r\n                            {category.map((c, i) => (\r\n                                <div\r\n                                    key={i}\r\n                                    className='col-4 mb-5'\r\n                                    style={{ padding: \"50px\" }}\r\n                                >\r\n                                    <ShowCat cat={c} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {showSuccess()}\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div>{error}</div>\r\n                {category.length && (\r\n                    <Link\r\n                        className='btn btn-primary btn-lg'\r\n                        id='button'\r\n                        style={{\r\n                            position: \"flex\",\r\n                            flexWrap: \"wrap\",\r\n                            alignContent: \"center\",\r\n                            alignItems: \"flex-end\",\r\n                        }}\r\n                        to={`/category/create/${id}`}\r\n                    >\r\n                        Create Category\r\n                    </Link>\r\n                )}\r\n                {!category.length && (\r\n                    <Link\r\n                        className='btn btn-primary btn-lg'\r\n                        id='button'\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            // top:\"50%\",\r\n                            bottom:\"10\",\r\n                            flexWrap: \"wrap\",\r\n                            alignContent: \"center\",\r\n                            alignItems: \"flex-end\",\r\n                        }}\r\n                        to={`/category/create/${id}`}\r\n                    >\r\n                        Create Category\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Category\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { isAuthenticated } from \"../auth\"\r\nimport { API } from \"../config\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport \"../core/style.css\"\r\n\r\nconst Expense = () => {\r\n    const [expense, setExpense] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const id = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n\r\n    const fetchE = async (catId) => {\r\n        try {\r\n            const res = await fetch(`${API}/expense/list/${catId}/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            const data = await res.json()\r\n            setExpense(\r\n                data.map((expense) => {\r\n                    return expense\r\n                })\r\n            )\r\n        } catch (err) {\r\n            setError(err)\r\n        }\r\n    }\r\n\r\n    const deleteCat = async (_id, cat_id, user_id, token) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/expense/${_id}/${cat_id}/${user_id}`,\r\n                {\r\n                    method: \"DELETE\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                }\r\n            )\r\n            const data = await res.json()\r\n            if (!data) {\r\n                setError({\r\n                    ...error,\r\n                    error: \"There is problem Deleting Category\",\r\n                })\r\n            }\r\n            if (data) {\r\n                setSuccess(true)\r\n            }\r\n            window.location.reload()\r\n        } catch (err) {\r\n            setError(err)\r\n        }\r\n    }\r\n\r\n    const ShowExpense = ({ e }) => {\r\n        return (\r\n            <tr>\r\n                <th scope='row'>{e.trans_title}</th>\r\n                <td>{e.amount}</td>\r\n                <Moment format={\"YYYY/MM/DD\"}>{e.trans_date}</Moment>\r\n                <td>{e.trans_desc}</td>\r\n                <td>\r\n                <Link\r\n                        className='btn btn-warning btn-md'\r\n                        to={`/expense/${e._id}/${e.cat_type._id}/${e.postedBy._id}`}\r\n                        style={{ flex: 1, flexDirection: \"row\" }}\r\n                    >\r\n                        Update Expense\r\n                    </Link>\r\n                </td>\r\n                <td>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-danger'\r\n                        onClick={() => {\r\n                            deleteCat(\r\n                                e._id,\r\n                                e.cat_type._id,\r\n                                isAuthenticated().user._id,\r\n                                isAuthenticated().token\r\n                            )\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Deletion of Category Successful\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const listExpense = async (userId, token) => {\r\n            try {\r\n                const cat_res = await fetch(`${API}/category/${userId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                const all_cat = await cat_res.json()\r\n                const id_cat = all_cat.map((cat) => cat._id)\r\n\r\n                id_cat.forEach((id) => fetchE(id))\r\n            } catch (err) {\r\n                setError(err)\r\n            }\r\n        }\r\n\r\n        listExpense(id, token)\r\n    }, [])\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <div className='row' style={{ textAlign: \"center\" }}>\r\n                    <div className='col-12'>\r\n                        <div className='center' style={{ textAlign: \"center\" }}>\r\n                            <table className='table container'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope='col'>Expense name</th>\r\n                                        <th scope='col'>Amount</th>\r\n                                        <th scope='col'>Date</th>\r\n                                        <th scope='col'>Description</th>\r\n                                        <th scope='col'>Update</th>\r\n                                        <th scope='col'>Delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {expense.map((e, i) => (\r\n                                        <ShowExpense e={e} />\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        {showSuccess()}\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div>{error}</div>\r\n\r\n                <Link\r\n                    className='btn btn-primary btn-lg center'\r\n                    style={{ textAlign: \"center\" }}\r\n                    to={`/expense/create/${id}`}\r\n                    id=\"exp_button\"\r\n                >\r\n                    Add expense\r\n                </Link>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Expense\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { isAuthenticated } from \"../auth\"\r\nimport { API } from \"../config\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport \"../core/style.css\"\r\n\r\nconst Income = () => {\r\n    const [income, setIncome] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const id = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n\r\n    const fetchE = async (catId) => {\r\n        try {\r\n            const res = await fetch(`${API}/income/list/${catId}/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            const data = await res.json()\r\n            setIncome(\r\n                data.map((income) => {\r\n                    return income\r\n                })\r\n            )\r\n        } catch (err) {\r\n            setError(err)\r\n        }\r\n    }\r\n\r\n    const deleteCat = async (_id, cat_id, user_id, token) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/income/${_id}/${cat_id}/${user_id}`,\r\n                {\r\n                    method: \"DELETE\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                }\r\n            )\r\n            const data = await res.json()\r\n            if (!data) {\r\n                setError({\r\n                    ...error,\r\n                    error: \"There is problem Deleting Category\",\r\n                })\r\n            }\r\n            if (data) {\r\n                setSuccess(true)\r\n            }\r\n            window.location.reload()\r\n        } catch (err) {\r\n            setError(err)\r\n        }\r\n    }\r\n\r\n    const ShowIncome = ({ e }) => {\r\n        return (\r\n            <tr>\r\n                <th scope='row'>{e.trans_title}</th>\r\n                <td>{e.amount}</td>\r\n                <Moment format={\"YYYY/MM/DD\"} >{e.trans_date}</Moment>\r\n                <td>{e.trans_desc}</td>\r\n                <td>\r\n                <Link\r\n                        className='btn btn-warning btn-md'\r\n                        to={`/income/${e._id}/${e.cat_type._id}/${e.postedBy._id}`}\r\n                        style={{ flex: 1, flexDirection: \"row\" }}\r\n                    >\r\n                        Update Income\r\n                    </Link>\r\n                </td>\r\n                <td>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-danger'\r\n                        onClick={() => {\r\n                            deleteCat(\r\n                                e._id,\r\n                                e.cat_type._id,\r\n                                isAuthenticated().user._id,\r\n                                isAuthenticated().token\r\n                            )\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Deletion of Income Successful\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const listIncome = async (userId, token) => {\r\n            try {\r\n                const cat_res = await fetch(`${API}/category/${userId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                const all_cat = await cat_res.json()\r\n                const id_cat = all_cat.map((cat) => cat._id)\r\n\r\n                id_cat.forEach((id) => fetchE(id))\r\n            } catch (err) {\r\n                setError(err)\r\n            }\r\n        }\r\n\r\n        listIncome(id, token)\r\n    }, [])\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <div className='row' style={{ textAlign: \"center\" }}>\r\n                    <div className='col-12'>\r\n                        <div className='center' style={{ textAlign: \"center\" }}>\r\n                            <table className='table container'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope='col'>income name</th>\r\n                                        <th scope='col'>Amount</th>\r\n                                        <th scope='col'>Date</th>\r\n                                        <th scope='col'>Description</th>\r\n                                        <th scope='col'>Update</th>\r\n                                        <th scope='col'>Delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {income.map((e, i) => (\r\n                                        <ShowIncome e={e} />\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        {showSuccess()}\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div>{error}</div>\r\n\r\n                <Link\r\n                    className='btn btn-primary btn-lg center'\r\n                    style={{ textAlign: \"center\" }}\r\n                    to={`/income/create/${id}`}\r\n                    id=\"exp_button\"\r\n                >\r\n                    Add Income\r\n                </Link>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Income\r\n","import React, { useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\nimport { Dropdown } from \"react-bootstrap\"\r\n\r\nconst CreateCategory = (props) => {\r\n    const userId = props.match.params.userId\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [list, setList] = useState(\"\")\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        desc: \"\",\r\n        error: \"\",\r\n        success: false,\r\n    })\r\n\r\n    const { name, desc, error, success } = values\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const handleTypeList = (ty) => (event) => {\r\n        setList(ty)\r\n    }\r\n\r\n    const createCategory = async (userId, token, type, { name, desc }) => {\r\n        try {\r\n            const res = await fetch(`${API}/category/create/${userId}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    cat_name: name,\r\n                    cat_type: type,\r\n                    cat_desc: desc,\r\n                }),\r\n            })\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: \"\",\r\n                    desc: \"\",\r\n                    error: \"\",\r\n                    success: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createCategory(userId, token, list, { name, desc })\r\n    }\r\n\r\n    const categoryForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Create category.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='nameCategory'>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"name\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='name'\r\n                                                            autoComplete='name'\r\n                                                            placeholder='Real estate'\r\n                                                            value={name}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <Dropdown>\r\n                                                            <Dropdown.Toggle\r\n                                                                variant='secondary'\r\n                                                                id='dropdown-basic'\r\n                                                            >\r\n                                                                Type\r\n                                                            </Dropdown.Toggle>\r\n\r\n                                                            <Dropdown.Menu>\r\n                                                                <Dropdown.Item\r\n                                                                    onClick={handleTypeList(\r\n                                                                        \"expense\"\r\n                                                                    )}\r\n                                                                >\r\n                                                                    Expense\r\n                                                                </Dropdown.Item>\r\n                                                                <Dropdown.Item\r\n                                                                    onClick={handleTypeList(\r\n                                                                        \"income\"\r\n                                                                    )}\r\n                                                                >\r\n                                                                    Income\r\n                                                                </Dropdown.Item>\r\n                                                                <Dropdown.Item\r\n                                                                    onClick={handleTypeList(\r\n                                                                        \"both\"\r\n                                                                    )}\r\n                                                                >\r\n                                                                    Both\r\n                                                                </Dropdown.Item>\r\n                                                            </Dropdown.Menu>\r\n                                                        </Dropdown>\r\n\r\n                                                        <div\r\n                                                            className='form-control'\r\n                                                            value={list}\r\n                                                        >\r\n                                                            {list}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='desc'\r\n                                                            autoComplete='desc'\r\n                                                            placeholder='information about cat'\r\n                                                            value={desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                New category is created click to view{\" \"}\r\n                <Link to='/category'>Category</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {categoryForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CreateCategory\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Layout from \"./Layout\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst UpdateCategory = (props) => {\r\n    const userId = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const catId = props.match.params.categoryId\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        desc: \"\",\r\n        type: \"\",\r\n        error: \"\",\r\n        success: false,\r\n        redirect: false,\r\n    })\r\n\r\n    const { name, desc, type, error, success, redirect } = values\r\n\r\n    const init = (catId, userId, token) => {\r\n        const getCategory = (catId, userId, token) => {\r\n            return fetch(`${API}/category/${catId}/${userId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .catch((err) => console.error(err))\r\n        }\r\n\r\n        getCategory(catId, userId, token, token).then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    name: data.cat_name,\r\n                    desc: data.cat_desc,\r\n                    type: data.cat_type,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(catId, userId, token)\r\n    }, [])\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createCategory = async (userId, token, { name, desc, type }) => {\r\n        try {\r\n            const res = await fetch(`${API}/category/${catId}/${userId}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    cat_name: name,\r\n                    cat_type: type,\r\n                    cat_desc: desc,\r\n                }),\r\n            })\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: \"\",\r\n                    desc: \"\",\r\n                    error: \"\",\r\n                    success: true,\r\n                    redirect: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createCategory(userId, token, { name, desc, type })\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirect) {\r\n            if (!error) {\r\n                return <Redirect to='/category' />\r\n            }\r\n        }\r\n    }\r\n\r\n    const categoryForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Update category.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='nameCategory'>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"name\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='name'\r\n                                                            name='name'\r\n                                                            autoComplete='name'\r\n                                                            placeholder='Real estate'\r\n                                                            value={name}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category Type\r\n                                                        </label>\r\n                                                        <select\r\n                                                            className='form-control'\r\n                                                            name='type'\r\n                                                            onChange={handleChange(\r\n                                                                \"type\"\r\n                                                            )}\r\n                                                            value={type}\r\n                                                        >\r\n                                                            <option>\r\n                                                                Please select\r\n                                                            </option>\r\n                                                            <option value='income'>\r\n                                                                income\r\n                                                            </option>\r\n                                                            <option value='expense'>\r\n                                                                expense\r\n                                                            </option>\r\n                                                            <option value='both'>\r\n                                                                both\r\n                                                            </option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='desc'\r\n                                                            autoComplete='desc'\r\n                                                            placeholder='information about cat'\r\n                                                            value={desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Update\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Category Updated.. click to view{\" \"}\r\n                <Link to='/category'>Category</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {categoryForm()} \r\n            {redirectUser()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UpdateCategory\r\n","import React,{Component} from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { isAuthenticated } from \"./index\"\r\n\r\nconst PrivateRoute = ({component: Component, ...rest }) => (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                isAuthenticated() ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/signin\",\r\n                            state: { from: props.location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        ></Route>\r\n    )\r\n\r\nexport default PrivateRoute\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst CreateExpense = (props) => {\r\n    const userId = props.match.params.userId\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [cat, setCat] = useState([])\r\n    const [values, setValues] = useState({\r\n        amount: 0,\r\n        trans_title: \"\",\r\n        trans_desc: \"\",\r\n        trans_date: new Date(),\r\n        cat_id: \"\",\r\n        error: \"\",\r\n        success: false,\r\n    })\r\n\r\n    const {\r\n        amount,\r\n        trans_title,\r\n        trans_desc,\r\n        trans_date,\r\n        cat_id,\r\n        error,\r\n        success,\r\n    } = values\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createExpense = async (\r\n        userId,\r\n        token,\r\n        { amount, trans_title, trans_desc, trans_date, cat_id }\r\n    ) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/expense/create/${cat_id}/${userId}`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        trans_title,\r\n                        trans_desc,\r\n                        trans_date,\r\n                        amount,\r\n                    }),\r\n                }\r\n            )\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    trans_title: \"\",\r\n                    trans_desc: \"\",\r\n                    trans_date: new Date(),\r\n                    amount: 0,\r\n                    error: \"\",\r\n                    success: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createExpense(userId, token, {\r\n            amount,\r\n            trans_title,\r\n            trans_desc,\r\n            trans_date,\r\n            cat_id,\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        return fetch(`${API}/category/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n    const SelectCategory = () => {\r\n        return (\r\n            <div>\r\n                <select\r\n                    className='form-control'\r\n                    name='cat_id'\r\n                    value={cat_id}\r\n                    onChange={handleChange(\"cat_id\")}\r\n                >\r\n                    <option>Please select</option>\r\n                    {cat &&\r\n                        cat.map((c, i) => (\r\n                            <option key={i} name={c.cat_name} value={c._id}>\r\n                                {c.cat_name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const isExpense = (cat) => {\r\n        if (cat.cat_type === \"expense\" || cat.cat_type === \"both\") {\r\n            return cat\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategories().then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\" })\r\n            } else {\r\n                setCat(data.filter(isExpense))\r\n\r\n                // if (data.cat_type === \"expense\" || data.cat_type === \"both\") {\r\n                // setCat(data)\r\n                // }\r\n            }\r\n        })\r\n    }, [values])\r\n\r\n    const categoryForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Create Expense.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='amount'>\r\n                                                            Expense amount\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"amount\"\r\n                                                            )}\r\n                                                            type='number'\r\n                                                            className='form-control'\r\n                                                            id='amount'\r\n                                                            placeholder='amount of transaction'\r\n                                                            value={amount}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_title'>\r\n                                                            Expense title\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_title\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='trans_title'\r\n                                                            placeholder='Car'\r\n                                                            value={trans_title}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <SelectCategory />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_date'>\r\n                                                            Date of transaction\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_date\"\r\n                                                            )}\r\n                                                            type='date'\r\n                                                            className='form-control'\r\n                                                            id='trans_date'\r\n                                                            autoComplete='trans_date'\r\n                                                            value={trans_date}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='trans_desc'\r\n                                                            autoComplete='trans_desc'\r\n                                                            placeholder='information about expense'\r\n                                                            value={trans_desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                New expense is created click to view{\" \"}\r\n                <Link to='/expense'>Expense</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showinfo = () => {\r\n        return <div>cat_id:{cat_id}</div>\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {/* {showinfo()} */}\r\n            {showError()}\r\n            {showSuccess()}\r\n            {categoryForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CreateExpense\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst UpdateExpense = (props) => {\r\n    const userId = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const catId = props.match.params.catId\r\n    const trans_id = props.match.params.trans_id\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [cat, setCat] = useState([])\r\n    const [values, setValues] = useState({\r\n        amount: 0,\r\n        trans_title: \"\",\r\n        trans_desc: \"\",\r\n        trans_date: new Date(),\r\n        cat_id: \"\",\r\n        error: \"\",\r\n        success: false,\r\n        redirect: false,\r\n    })\r\n\r\n    const {\r\n        amount,\r\n        trans_title,\r\n        trans_desc,\r\n        trans_date,\r\n        cat_id,\r\n        error,\r\n        success,\r\n        redirect,\r\n    } = values\r\n\r\n    const init = (userId, trans_id, token) => {\r\n        const getCategory = (userId, token) => {\r\n            return fetch(`${API}/expense/${trans_id}/${userId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .catch((err) => console.error(err))\r\n        }\r\n\r\n        getCategory(userId, token, token).then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                // populate the state\r\n                console.log(\"data get \", data)\r\n                let d = new Date(data.trans_date)\r\n                d = d.toISOString().substring(0, 10)\r\n                setValues({\r\n                    ...values,\r\n                    trans_title: data.trans_title,\r\n                    trans_desc: data.trans_desc,\r\n                    trans_date: d,\r\n                    amount: data.amount,\r\n                    cat_id: data.cat_type,\r\n                })\r\n                console.log(\"data set \", values)\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        return fetch(`${API}/category/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n    const isExpense = (cat) => {\r\n        if (cat.cat_type === \"expense\" || cat.cat_type === \"both\") {\r\n            return cat\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(userId, trans_id, token)\r\n        getCategories().then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\" })\r\n            } else {\r\n                setCat(data.filter(isExpense))\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createExpense = async (\r\n        userId,\r\n        token,\r\n        { amount, trans_title, trans_desc, trans_date, cat_id }\r\n    ) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/expense/${trans_id}/${catId}/${userId}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        trans_title: trans_title,\r\n                        trans_desc: trans_desc,\r\n                        trans_date: trans_date,\r\n                        amount: amount,\r\n                    }),\r\n                }\r\n            )\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    amount: 0,\r\n                    trans_title: \"\",\r\n                    trans_desc: \"\",\r\n                    trans_date: new Date(),\r\n                    cat_id: \"\",\r\n                    success: true,\r\n                    redirect: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createExpense(userId, token, {\r\n            amount,\r\n            trans_title,\r\n            trans_desc,\r\n            trans_date,\r\n            cat_id,\r\n        })\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirect) {\r\n            if (!error) {\r\n                return <Redirect to='/expense' />\r\n            }\r\n        }\r\n    }\r\n\r\n    const SelectCategory = () => {\r\n        return (\r\n            <div>\r\n                <select\r\n                    className='form-control'\r\n                    name='cat_id'\r\n                    value={cat_id}\r\n                    onChange={handleChange(\"cat_id\")}\r\n                >\r\n                    <option>Please select</option>\r\n                    {cat &&\r\n                        cat.map((c, i) => (\r\n                            <option key={i} name={c.cat_name} value={c._id}>\r\n                                {c.cat_name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const expenseForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Update Expense.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='amount'>\r\n                                                            Expense amount\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"amount\"\r\n                                                            )}\r\n                                                            type='number'\r\n                                                            className='form-control'\r\n                                                            id='amount'\r\n                                                            placeholder='amount of transaction'\r\n                                                            value={amount}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_title'>\r\n                                                            Expense title\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_title\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='trans_title'\r\n                                                            placeholder='Car'\r\n                                                            value={trans_title}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <SelectCategory />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_date'>\r\n                                                            Date of transaction\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_date\"\r\n                                                            )}\r\n                                                            type='date'\r\n                                                            className='form-control'\r\n                                                            id='trans_date'\r\n                                                            autoComplete='trans_date'\r\n                                                            value={trans_date}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='trans_desc'\r\n                                                            autoComplete='trans_desc'\r\n                                                            placeholder='information about expense'\r\n                                                            value={trans_desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Expense Updated.. click to view{\" \"}\r\n                <Link to='/expense'>Expense</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {expenseForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UpdateExpense\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst CreateIncome = (props) => {\r\n    const userId = props.match.params.userId\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [cat, setCat] = useState([])\r\n    const [values, setValues] = useState({\r\n        amount: 0,\r\n        trans_title: \"\",\r\n        trans_desc: \"\",\r\n        trans_date: new Date(),\r\n        cat_id: \"\",\r\n        error: \"\",\r\n        success: false,\r\n    })\r\n\r\n    const {\r\n        amount,\r\n        trans_title,\r\n        trans_desc,\r\n        trans_date,\r\n        cat_id,\r\n        error,\r\n        success,\r\n    } = values\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createExpense = async (\r\n        userId,\r\n        token,\r\n        { amount, trans_title, trans_desc, trans_date, cat_id }\r\n    ) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/income/create/${cat_id}/${userId}`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        trans_title,\r\n                        trans_desc,\r\n                        trans_date,\r\n                        amount,\r\n                    }),\r\n                }\r\n            )\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    trans_title: \"\",\r\n                    trans_desc: \"\",\r\n                    trans_date: new Date(),\r\n                    amount: 0,\r\n                    error: \"\",\r\n                    success: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createExpense(userId, token, {\r\n            amount,\r\n            trans_title,\r\n            trans_desc,\r\n            trans_date,\r\n            cat_id,\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        return fetch(`${API}/category/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n    const SelectCategory = () => {\r\n        return (\r\n            <div>\r\n                <select\r\n                    className='form-control'\r\n                    name='cat_id'\r\n                    value={cat_id}\r\n                    onChange={handleChange(\"cat_id\")}\r\n                >\r\n                    <option>Please select</option>\r\n                    {cat &&\r\n                        cat.map((c, i) => (\r\n                            <option key={i} name={c.cat_name} value={c._id}>\r\n                                {c.cat_name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const isExpense = (cat) => {\r\n        if (cat.cat_type === \"income\" || cat.cat_type === \"both\") {\r\n            return cat\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategories().then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\" })\r\n            } else {\r\n                setCat(data.filter(isExpense))\r\n\r\n                // if (data.cat_type === \"expense\" || data.cat_type === \"both\") {\r\n                // setCat(data)\r\n                // }\r\n            }\r\n        })\r\n    }, [values])\r\n\r\n    const categoryForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Create Income.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='amount'>\r\n                                                            Income amount\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"amount\"\r\n                                                            )}\r\n                                                            type='number'\r\n                                                            className='form-control'\r\n                                                            id='amount'\r\n                                                            placeholder='amount of transaction'\r\n                                                            value={amount}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_title'>\r\n                                                            Income title\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_title\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='trans_title'\r\n                                                            placeholder='Car'\r\n                                                            value={trans_title}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <SelectCategory />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_date'>\r\n                                                            Date of transaction\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_date\"\r\n                                                            )}\r\n                                                            type='date'\r\n                                                            className='form-control'\r\n                                                            id='trans_date'\r\n                                                            autoComplete='trans_date'\r\n                                                            value={trans_date}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='trans_desc'\r\n                                                            autoComplete='trans_desc'\r\n                                                            placeholder='information about expense'\r\n                                                            value={trans_desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                New income is created click to view{\" \"}\r\n                <Link to='/income'>Income</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showinfo = () => {\r\n        return <div>cat_id:{cat_id}</div>\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {/* {showinfo()} */}\r\n            {showError()}\r\n            {showSuccess()}\r\n            {categoryForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CreateIncome\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst UpdateIncome = (props) => {\r\n    const userId = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const catId = props.match.params.catId\r\n    const trans_id = props.match.params.trans_id\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [cat, setCat] = useState([])\r\n    const [values, setValues] = useState({\r\n        amount: 0,\r\n        trans_title: \"\",\r\n        trans_desc: \"\",\r\n        trans_date: new Date(),\r\n        cat_id: \"\",\r\n        error: \"\",\r\n        success: false,\r\n        redirect: false,\r\n    })\r\n\r\n    const {\r\n        amount,\r\n        trans_title,\r\n        trans_desc,\r\n        trans_date,\r\n        cat_id,\r\n        error,\r\n        success,\r\n        redirect,\r\n    } = values\r\n\r\n    const init = (userId, trans_id, token) => {\r\n        const getCategory = (userId, token) => {\r\n            return fetch(`${API}/income/${trans_id}/${userId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .catch((err) => console.error(err))\r\n        }\r\n\r\n        getCategory(userId, token, token).then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                // populate the state\r\n                console.log(\"data get \", data)\r\n                let d = new Date(data.trans_date)\r\n                d = d.toISOString().substring(0, 10)\r\n                setValues({\r\n                    ...values,\r\n                    trans_title: data.trans_title,\r\n                    trans_desc: data.trans_desc,\r\n                    trans_date: d,\r\n                    amount: data.amount,\r\n                    cat_id: data.cat_type,\r\n                })\r\n                console.log(\"data set \", trans_title,cat_id)\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        return fetch(`${API}/category/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n    const isIncome = (cat) => {\r\n        if (cat.cat_type === \"income\" || cat.cat_type === \"both\") {\r\n            return cat\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(userId, trans_id, token)\r\n        getCategories().then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\" })\r\n            } else {\r\n                setCat(data.filter(isIncome))\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createIncome = async (\r\n        userId,\r\n        token,\r\n        { amount, trans_title, trans_desc, trans_date, cat_id }\r\n    ) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/income/${trans_id}/${catId}/${userId}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        trans_title: trans_title,\r\n                        trans_desc: trans_desc,\r\n                        trans_date: trans_date,\r\n                        amount: amount,\r\n                    }),\r\n                }\r\n            )\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    amount: 0,\r\n                    trans_title: \"\",\r\n                    trans_desc: \"\",\r\n                    trans_date: new Date(),\r\n                    cat_id: \"\",\r\n                    success: true,\r\n                    redirect: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createIncome(userId, token, {\r\n            amount,\r\n            trans_title,\r\n            trans_desc,\r\n            trans_date,\r\n            cat_id,\r\n        })\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirect) {\r\n            if (!error) {\r\n                return <Redirect to='/income' />\r\n            }\r\n        }\r\n    }\r\n\r\n    const SelectCategory = () => {\r\n        return (\r\n            <div>\r\n                <select\r\n                    className='form-control'\r\n                    name='cat_id'\r\n                    onChange={handleChange(\"cat_id\")}\r\n                    value={cat_id}\r\n                >\r\n                    <option>Please select</option>\r\n                    {cat &&\r\n                        cat.map((c, i) => (\r\n                            <option key={i} name={c.cat_name} value={c._id}>\r\n                                {c.cat_name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const incomeForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Update Income.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='amount'>\r\n                                                            Income amount\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"amount\"\r\n                                                            )}\r\n                                                            type='number'\r\n                                                            className='form-control'\r\n                                                            id='amount'\r\n                                                            placeholder='amount of transaction'\r\n                                                            value={amount}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_title'>\r\n                                                            Income title\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_title\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='trans_title'\r\n                                                            placeholder='Car'\r\n                                                            value={trans_title}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <SelectCategory />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_date'>\r\n                                                            Date of transaction\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_date\"\r\n                                                            )}\r\n                                                            type='date'\r\n                                                            className='form-control'\r\n                                                            id='trans_date'\r\n                                                            autoComplete='trans_date'\r\n                                                            value={trans_date}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='trans_desc'\r\n                                                            autoComplete='trans_desc'\r\n                                                            placeholder='information about income'\r\n                                                            value={trans_desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Income Updated.. click to view{\" \"}\r\n                <Link to='/income'>Income</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {incomeForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UpdateIncome\r\n","import React from \"react\"\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\nimport Signup from \"./user/Signup.js\"\r\nimport Signin from \"./user/Signin.js\"\r\nimport Home from \"./core/Home.js\"\r\nimport Category from \"./core/Category\"\r\nimport Expense from \"./Expense/Expense\"\r\nimport Income from \"./Income/Income\"\r\nimport CreateCategory from \"./core/CreateCategory\"\r\nimport UpdateCategory from \"./core/UpdateCategory\"\r\nimport { isAuthenticated } from \"./auth\"\r\nimport PrivateRoute  from \"./auth/PrivateRoute.js\"\r\nimport CreateExpense from './Expense/CreateExpense'\r\nimport UpdateExpense from './Expense/UpdateExpense'\r\nimport CreateIncome from './Income/CreateIncome'\r\nimport UpdateIncome from './Income/UpdateIncome'\r\n\r\nconst Routes = () => {\r\n    const handelLogin = (e) => {\r\n        return isAuthenticated() ? true : false\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path='/signin' exact component={Signin} />\r\n                <Route path='/signup' exact component={Signup} />\r\n                <PrivateRoute path='/' exact component={Home} />\r\n                <PrivateRoute\r\n                    path='/category'\r\n                    handelLogin={handelLogin}\r\n                    exact\r\n                    component={Category}\r\n                />\r\n                <PrivateRoute\r\n                    path='/category/create/:userId'\r\n                    handelLogin={handelLogin}\r\n                    exact\r\n                    component={CreateCategory}\r\n                />\r\n                <PrivateRoute\r\n                    path='/category/update/:categoryId/:userId'\r\n                    handelLogin={handelLogin}\r\n                    exact\r\n                    component={UpdateCategory}\r\n                />\r\n                <PrivateRoute path='/expense' exact component={Expense} />\r\n                <PrivateRoute path='/expense/create/:userId' exact component={CreateExpense} />\r\n                <PrivateRoute path='/expense/:trans_id/:catId/:userId' exact component={UpdateExpense} />\r\n                <PrivateRoute path='/income' exact component={Income} />\r\n                <PrivateRoute path='/income/create/:userId' exact component={CreateIncome} />\r\n                <PrivateRoute path='/income/:trans_id/:catId/:userId' exact component={UpdateIncome} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\nimport 'bootstrap/dist/css/bootstrap.min.css' \n\nReactDOM.render(\n    <Routes />,\n  document.getElementById('root')\n);"],"sourceRoot":""}