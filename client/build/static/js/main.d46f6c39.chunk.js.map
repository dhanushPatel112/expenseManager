{"version":3,"sources":["config.js","auth/index.js","core/Menu.js","core/Layout.js","user/Signup.js","user/Signin.js","core/Home.js","core/Category.js","Expense/Expense.js","Income/Income.js","core/CreateCategory.js","core/UpdateCategory.js","auth/PrivateRoute.js","Expense/CreateExpense.js","Expense/UpdateExpense.js","Income/CreateIncome.js","Income/UpdateIncome.js","Routes.js","index.js"],"names":["API","process","signout","next","window","localStorage","removeItem","fetch","method","then","response","console","log","catch","err","isAuthenticated","getItem","JSON","parse","isActive","history","path","location","pathname","color","fontStyle","fontSize","fontFamily","padding","margin","withRouter","className","to","xmlns","width","height","fill","viewBox","d","fillRule","onClick","style","cursor","Layout","children","Menu","id","Signup","useState","name","email","phone","password","error","success","values","setValues","handleChange","event","target","value","clickSubmit","user","preventDefault","headers","body","stringify","json","data","display","action","autoComplete","placeholder","type","onChange","required","htmlFor","pattern","Signin","loading","redirectToReferrer","handelChange","signin","setItem","authenticate","textAlign","e","info","redirectUser","Home","expense","setExpense","setError","token","_id","fetchE","catId","a","Accept","Authorization","res","map","item","amount","reduce","prev","curr","useEffect","listExpense","userId","cat_res","all_cat","cat","forEach","Category","category","setCategory","setSuccess","whole_user_id","listCategory","ShowCat","cat_desc","cat_name","cat_type","createdAt","postedBy","user_id","deleteCat","cat_id","reload","textTransform","flex","flexDirection","backgroundColor","c","i","length","position","flexWrap","alignContent","alignItems","bottom","Expense","ShowExpense","scope","trans_title","format","trans_date","trans_desc","Income","income","setIncome","ShowIncome","listIncome","CreateCategory","props","match","params","list","setList","desc","handleTypeList","ty","createCategory","Dropdown","Toggle","variant","Item","UpdateCategory","categoryId","redirect","getCategory","init","PrivateRoute","Component","component","rest","render","state","from","CreateExpense","setCat","Date","createExpense","SelectCategory","isExpense","filter","UpdateExpense","trans_id","toISOString","substring","CreateIncome","UpdateIncome","isIncome","createIncome","Routes","handelLogin","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d46f6c39.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;","import { API } from \"../config\"\r\n\r\nexport const signup = (user) => {\r\n    return fetch(`${API}/signup`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user),\r\n    })\r\n        .then((response) => {\r\n            return response.json()\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const signin = (user) => {\r\n    return fetch(`${API}/signin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user),\r\n    })\r\n        .then((response) => {\r\n            return response.json()\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.setItem(\"jwt\", JSON.stringify(data))\r\n        next()\r\n    }\r\n}\r\n\r\nexport const signout = (next) => {\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.removeItem(\"jwt\")\r\n        // next()\r\n        return fetch(`${API}/signout`, {\r\n            method: \"GET\",\r\n        })\r\n            .then((response) => {\r\n                console.log(\"signout\", response)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == \"undefined\") {\r\n        return false\r\n    }\r\n    if (localStorage.getItem(\"jwt\")) {\r\n        return JSON.parse(localStorage.getItem(\"jwt\"))\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n","/* eslint-disable jsx-a11y/iframe-has-title */\r\nimport React, { Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { isAuthenticated, signout } from \"../auth\";\r\n\r\nconst isActive = (history, path) => {\r\n  if (history.location.pathname === path) {\r\n    return {\r\n      color: \"#0000FF\",\r\n      fontStyle: \"\",\r\n      fontSize: \"22px\",\r\n      fontFamily: \"Verdana, sans-serif\",\r\n      padding: \"0px 10px\",\r\n      margin: \"0px auto\",\r\n    };\r\n  } else {\r\n    return {\r\n      color: \"#000000\",\r\n      fontSize: \"22px\",\r\n      fontFamily: \"Verdana, sans-serif\",\r\n      padding: \"0px 10px\",\r\n      margin: \"0px auto\",\r\n    };\r\n  }\r\n};\r\n\r\nconst newMenu = ({ history }) => {\r\n  return (\r\n    <div className=\"horizontal-menu\">\r\n      <nav className=\"navbar top-navbar\">\r\n        <div className=\"container\">\r\n          <div className=\"navbar-content\">\r\n            <Link to=\"/\" className=\"navbar-brand\">\r\n              Expense<span>Manager</span>\r\n            </Link>\r\n\r\n            <ul className=\"navbar-nav\">\r\n              {!isAuthenticated() && (\r\n                <Fragment>\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/signup\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-person-plus\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path d=\"M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\" />\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z\"\r\n                        />\r\n                      </svg>\r\n                      <span className=\"menu-title\">Signup</span>\r\n                    </Link>\r\n                  </li>\r\n                </Fragment>\r\n              )}\r\n              <li className=\"nav-item dropdown nav-apps\"></li>\r\n              {!isAuthenticated() && (\r\n                <Fragment>\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/signin\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-person\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path d=\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\" />\r\n                      </svg>\r\n                      <span className=\"menu-title\">Signin</span>\r\n                    </Link>\r\n                  </li>\r\n                </Fragment>\r\n              )}\r\n              <li className=\"nav-item dropdown nav-apps\"></li>\r\n              {isAuthenticated() && (\r\n                <Fragment>\r\n                  <div>\r\n                    <li className=\"nav-item\">\r\n                      <Link className=\"nav-link\" to=\"/signin\">\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          width=\"16\"\r\n                          height=\"16\"\r\n                          fill=\"currentColor\"\r\n                          className=\"bi bi-person-x\"\r\n                          viewBox=\"0 0 16 16\"\r\n                        >\r\n                          <path d=\"M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\" />\r\n                          <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M12.146 5.146a.5.5 0 0 1 .708 0L14 6.293l1.146-1.147a.5.5 0 0 1 .708.708L14.707 7l1.147 1.146a.5.5 0 0 1-.708.708L14 7.707l-1.146 1.147a.5.5 0 0 1-.708-.708L13.293 7l-1.147-1.146a.5.5 0 0 1 0-.708z\"\r\n                          />\r\n                        </svg>\r\n                        <span className=\"menu-title\" onClick={() => signout()}>\r\n                          Signout\r\n                        </span>\r\n                        {isAuthenticated() && (\r\n                          <li className=\"nav-item\">\r\n                            <span\r\n                              className=\"nav-link\"\r\n                              style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                              onClick={() =>\r\n                                signout(() => {\r\n                                  history.push(\"/\");\r\n                                })\r\n                              }\r\n                            >\r\n                              SignOut\r\n                            </span>\r\n                          </li>\r\n                        )}\r\n                      </Link>\r\n                    </li>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n              <li className=\"nav-item dropdown nav-apps\"></li>\r\n              </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <nav className=\"navbar top-navbar\">\r\n        <div className=\"container d-flex justify-content-center\">\r\n          <ul className=\"nav page-navigation\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-card-text\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M14.5 3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h13zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z\" />\r\n                  <path d=\"M3 5.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM3 8a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 8zm0 2.5a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5z\" />\r\n                </svg>\r\n                <span style={isActive(history, \"/\")} className=\"menu-title\">\r\n                  Dashboard\r\n                </span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/category\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-grid-1x2-fill\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M0 1a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V1zm9 0a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1h-5a1 1 0 0 1-1-1V1zm0 9a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1h-5a1 1 0 0 1-1-1v-5z\" />\r\n                </svg>\r\n                <span\r\n                  style={isActive(history, \"/category\")}\r\n                  className=\"menu-title\"\r\n                >\r\n                  Category\r\n                </span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/expense\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-file-plus\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M8.5 6a.5.5 0 0 0-1 0v1.5H6a.5.5 0 0 0 0 1h1.5V10a.5.5 0 0 0 1 0V8.5H10a.5.5 0 0 0 0-1H8.5V6z\" />\r\n                  <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2zm10-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1z\" />\r\n                </svg>\r\n                <span\r\n                  style={isActive(history, \"/expense\")}\r\n                  className=\"menu-title\"\r\n                >\r\n                  Expense\r\n                </span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/income\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-graph-up\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M0 0h1v15h15v1H0V0zm10 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V4.9l-3.613 4.417a.5.5 0 0 1-.74.037L7.06 6.767l-3.656 5.027a.5.5 0 0 1-.808-.588l4-5.5a.5.5 0 0 1 .758-.06l2.609 2.61L13.445 4H10.5a.5.5 0 0 1-.5-.5z\"\r\n                  />\r\n                </svg>\r\n                <span\r\n                  style={isActive(history, \"/income\")}\r\n                  className=\"menu-title\"\r\n                >\r\n                  Income\r\n                </span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const Menu = ({ history }) => {\r\n//   return (\r\n//     <div className=\"navbar navbar-dark bg-dark\">\r\n//       <ul className=\"nav nav-tabs bg-primary\">\r\n//         <li className=\"nav-items\">\r\n//           <Link className=\"nav-link\" style={isActive(history, \"/\")} to=\"/\">\r\n//             Home\r\n//           </Link>\r\n//         </li>\r\n//         <li className=\"nav-items\">\r\n//           <Link\r\n//             className=\"nav-link\"\r\n//             style={isActive(history, \"/signin\")}\r\n//             to=\"/signin\"\r\n//           >\r\n//             Signin{\" \"}\r\n//           </Link>\r\n//         </li>\r\n//         <li className=\"nav-items\">\r\n//           <Link\r\n//             className=\"nav-link\"\r\n//             style={isActive(history, \"/signup\")}\r\n//             to=\"/signup\"\r\n//           >\r\n//             Signup\r\n//           </Link>\r\n//         </li>\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default withRouter(newMenu);\r\n","import React from \"react\"\r\nimport Menu from \"./Menu\"\r\nimport './style.css';\r\n\r\n\r\nconst Layout = ({\r\n    className,\r\n    children,\r\n}) => {\r\n    const footer = () => (\r\n        <footer className='footer d-flex flex-column flex-md-row align-items-center justify-content-between' id='footer'>\r\n            <p className='text-muted text-center text-md-left'>\r\n                Copyright © 2021{\" \"}\r\n                . All rights reserved\r\n            </p>\r\n        </footer>\r\n    )\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            <div className={className}>{children}</div>\r\n            {footer()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signup } from \"../auth\";\r\nimport \"./style.css\";\r\n\r\nconst Signup = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const { name, email, password, phone, error, success } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n    signup({ name, email, password, phone })\r\n      .then((data) => {\r\n        try {\r\n          if (data.error) {\r\n            setValues({ ...values, error: data.error, success: false });\r\n          } else {\r\n            setValues({\r\n              ...values,\r\n              name: \"\",\r\n              email: \"\",\r\n              password: \"\",\r\n              phone: \"\",\r\n              error: \"\",\r\n              success: true,\r\n            });\r\n          }\r\n        } catch {\r\n          setValues({ ...values, error: data, success: false });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setValues({ ...values, error: err, success: false });\r\n      });\r\n  };\r\n\r\n  const signUpForm = () => (\r\n    <div id=\"body_html\">\r\n      <div className=\"session\">\r\n        <div className=\"left\"></div>\r\n        <form action=\"\" className=\"log-in\" autoComplete=\"off\">\r\n          <p>Welcome to </p>\r\n          <h4>\r\n            Expense <span>Manager</span>\r\n          </h4>\r\n          <div className=\"floating-label\">\r\n            <input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              autoComplete=\"off\"\r\n              onChange={handleChange(\"email\")}\r\n              required\r\n              value={email}\r\n            />\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <div className=\"icon\"></div>\r\n          </div>\r\n          <div className=\"floating-label\">\r\n            <input\r\n              placeholder=\"Name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              autoComplete=\"off\"\r\n              onChange={handleChange(\"name\")}\r\n              value={name}\r\n            />\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <div className=\"icon\"></div>\r\n          </div>\r\n\r\n          <div className=\"floating-label\">\r\n            <input\r\n              onChange={handleChange(\"phone\")}\r\n              type=\"tel\"\r\n              id=\"exampleInputPhone\"\r\n              placeholder=\"9786543210\"\r\n              value={phone}\r\n              required\r\n              pattern=\"[0-9]{10}\"\r\n            />\r\n            <label htmlFor=\"name\">Phone number:</label>\r\n            <div className=\"icon\"></div>\r\n          </div>\r\n\r\n          <div className=\"floating-label\">\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"on\"\r\n              onChange={handleChange(\"password\")}\r\n              value={password}\r\n            />\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <div className=\"icon\"></div>\r\n          </div>\r\n          <button type=\"submit\" onClick={clickSubmit}>\r\n            Log in\r\n          </button>\r\n          <br />\r\n          <Link style={{ color: \"blue\" }} to=\"/signin\">\r\n            Already a user? Sign in\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const signUpFormOld = () => {\r\n    return (\r\n      <div className=\"main-wrapper\">\r\n        <div className=\"page-wrapper full-page\">\r\n          <div className=\"page-content d-flex align-items-center justify-content-center\">\r\n            <div className=\"row w-100 mx-0 auth-page\">\r\n              <div className=\"col-md-8 col-xl-6 mx-auto\">\r\n                <div className=\"card\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4 pr-md-0\">\r\n                      <div className=\"auth-left-wrapper\"></div>\r\n                    </div>\r\n                    <div className=\"col-md-8 pl-md-0\">\r\n                      <div className=\"auth-form-wrapper px-4 py-5\">\r\n                        <Link to=\"/\" className=\"noble-ui-logo d-block mb-2\">\r\n                          Expense<span>Manager</span>\r\n                        </Link>\r\n                        <h5 className=\"text-muted font-weight-normal mb-4\">\r\n                          Create a account.\r\n                        </h5>\r\n                        <form className=\"forms-sample\">\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleInputEmail1\">\r\n                              Email address\r\n                            </label>\r\n                            <input\r\n                              onChange={handleChange(\"email\")}\r\n                              type=\"email\"\r\n                              className=\"form-control\"\r\n                              id=\"exampleInputEmail1\"\r\n                              placeholder=\"Email\"\r\n                              value={email}\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleInputUsername1\">\r\n                              Full name\r\n                            </label>\r\n                            <input\r\n                              onChange={handleChange(\"name\")}\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              id=\"exampleInputUsername1\"\r\n                              autoComplete=\"Username\"\r\n                              placeholder=\"Jon Smith\"\r\n                              value={name}\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleInputPassword1\">\r\n                              Password\r\n                            </label>\r\n                            <input\r\n                              onChange={handleChange(\"password\")}\r\n                              type=\"password\"\r\n                              className=\"form-control\"\r\n                              id=\"exampleInputPassword1\"\r\n                              autoComplete=\"current-password\"\r\n                              placeholder=\"Password\"\r\n                              value={password}\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleInputPhone\">Phone</label>\r\n                            <input\r\n                              onChange={handleChange(\"phone\")}\r\n                              type=\"tel\"\r\n                              className=\"form-control\"\r\n                              id=\"exampleInputPhone\"\r\n                              placeholder=\"1234567890\"\r\n                              value={phone}\r\n                              required\r\n                              pattern=\"[0-9]{10}\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"mt-3\">\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\"btn btn-primary mr-2 mb-2 mb-md-0\"\r\n                              onClick={clickSubmit}\r\n                            >\r\n                              Sing up\r\n                            </button>\r\n                          </div>\r\n                          <Link\r\n                            to=\"/signin\"\r\n                            className=\"d-block mt-3 text-muted\"\r\n                          >\r\n                            Already a user? Sign in\r\n                          </Link>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const showError = () => {\r\n    return (\r\n      <div\r\n        className=\"alert alert-fill-danger\"\r\n        style={{ display: error ? \"\" : \"none\" }}\r\n      >\r\n        <div>Error</div>\r\n        {error}\r\n      </div>\r\n    );\r\n  };\r\n  const showSuccess = () => {\r\n    return (\r\n      <div\r\n        className=\"alert alert-fill-success\"\r\n        style={{ display: success ? \"\" : \"none\" }}\r\n      >\r\n        <div>success full</div>\r\n        New account is created plz <Link to=\"/signin\">Signin</Link>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {showError()}\r\n      {showSuccess()}\r\n      {signUpForm()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport Layout from \"../core/Layout\";\r\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\r\nimport \"./style.css\";\r\n\r\nconst Signin = () => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    loading: false,\r\n    redirectToReferrer: false,\r\n  });\r\n\r\n  const { email, password, loading, error, redirectToReferrer } = values;\r\n  const { user } = isAuthenticated();\r\n\r\n  const handelChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false, loading: true });\r\n    if (email && password) {\r\n      signin({ email, password }).then((data) => {\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error, loading: false });\r\n        } else {\r\n          authenticate(data, () => {\r\n            setValues({\r\n              ...values,\r\n              redirectToReferrer: true,\r\n            });\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      setValues({\r\n        ...values,\r\n        error: \"Please provide an email address and password\",\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const signUpForm = () => (\r\n    <div id=\"body_html\">\r\n      <div className=\"session\">\r\n        <div className=\"left\"></div>\r\n        <form action=\"\" className=\"log-in\" autoComplete=\"off\">\r\n          <h4>\r\n            Welcome <span>Back</span>\r\n          </h4>\r\n          <p>Please enter your email address and password</p>\r\n          <div className=\"floating-label\">\r\n            <input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              autoComplete=\"off\"\r\n              onChange={handelChange(\"email\")}\r\n              value={email}\r\n            />\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <div className=\"icon\"></div>\r\n          </div>\r\n          <div className=\"floating-label\">\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"on\"\r\n              onChange={handelChange(\"password\")}\r\n              value={password}\r\n            />\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <div className=\"icon\"></div>\r\n          </div>\r\n          <button type=\"submit\" onClick={clickSubmit}>\r\n            Log in\r\n          </button>\r\n          <br />\r\n          <Link style={{ color: \"blue\" }} to=\"/signup\">\r\n            Already a user? Sign up\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  //   const signUpFormOld = () => (\r\n  //     <div className=\"main-wrapper\">\r\n  //       <div style={{ height: \"20em\" }} className=\"page-wrapper full-page\">\r\n  //         <div className=\"page-content d-flex align-items-center justify-content-center\">\r\n  //           <div className=\"row w-100 mx-8 auth-page\">\r\n  //             <div className=\"col-md-8 col-xl-6 mx-auto\">\r\n  //               <div className=\"card\">\r\n  //                 <div className=\"row\">\r\n  //                   <div className=\"col-md-8 pl-md-0\">\r\n  //                     <div className=\"auth-form-wrapper px-4 py-5\">\r\n  //                       <Link to=\"/\" className=\"noble-ui-logo d-block mb-2\">\r\n  //                         Expense<span>Manager</span>\r\n  //                       </Link>\r\n  //                       <h5 className=\"text-muted font-weight-normal mb-4\">\r\n  //                         Welcome back! Log in to your account.\r\n  //                       </h5>\r\n  //                       <form className=\"forms-sample\">\r\n  //                         <div className=\"form-group\">\r\n  //                           <label htmlFor=\"exampleInputEmail1\">\r\n  //                             Email address\r\n  //                           </label>\r\n  //                           <input\r\n  //                             type=\"email\"\r\n  //                             onChange={handelChange(\"email\")}\r\n  //                             value={email}\r\n  //                             className=\"form-control\"\r\n  //                             id=\"exampleInputEmail1\"\r\n  //                             placeholder=\"Email\"\r\n  //                           />\r\n  //                         </div>\r\n  //                         <div className=\"form-group\">\r\n  //                           <label htmlFor=\"exampleInputPassword1\">\r\n  //                             Password\r\n  //                           </label>\r\n  //                           <input\r\n  //                             type=\"password\"\r\n  //                             className=\"form-control\"\r\n  //                             onChange={handelChange(\"password\")}\r\n  //                             value={password}\r\n  //                             id=\"exampleInputPassword1\"\r\n  //                             autoComplete=\"current-password\"\r\n  //                             placeholder=\"Password\"\r\n  //                           />\r\n  //                         </div>\r\n  //                         <div className=\"form-check form-check-flat form-check-primary\">\r\n  //                           <label className=\"form-check-label\">\r\n  //                             <input\r\n  //                               type=\"checkbox\"\r\n  //                               className=\"form-check-input\"\r\n  //                             />\r\n  //                             Remember me\r\n  //                           </label>\r\n  //                         </div>\r\n  //                         <div className=\"mt-3\">\r\n  //                           <button\r\n  //                             type=\"submit\"\r\n  //                             className=\"btn btn-primary mr-2 mb-2 mb-md-0\"\r\n  //                             onClick={clickSubmit}\r\n  //                           >\r\n  //                             Login\r\n  //                           </button>\r\n  //                         </div>\r\n  //                         <Link to=\"/signup\" className=\"d-block mt-3 text-muted\">\r\n  //                           Not a user? Sign up\r\n  //                         </Link>\r\n  //                       </form>\r\n  //                     </div>\r\n  //                   </div>\r\n  //                 </div>\r\n  //               </div>\r\n  //             </div>\r\n  //           </div>\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n\r\n  const showError = () => (\r\n    <div\r\n      className=\"alert alert-danger\"\r\n      style={{ display: error ? \"\" : \"none\", textAlign: \"center\" }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n\r\n  const showLoading = () =>\r\n    loading && (\r\n      <div className=\"alert alert-info\">\r\n        <h2>Loading..</h2>\r\n      </div>\r\n    );\r\n\r\n  const redirectUser = (e) => {\r\n    if (redirectToReferrer) {\r\n      if (user) {\r\n        console.info(user, e);\r\n      }\r\n    }\r\n    if (isAuthenticated()) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {showLoading()}\r\n      {showError()}\r\n      {signUpForm()}\r\n      {redirectUser()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport { API } from \"../config.js\";\r\nimport { isAuthenticated } from \"../auth\";\r\n\r\nconst Home = () => {\r\n  const [expense, setExpense] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  let total_expense = 0;\r\n  let total_income = 0;\r\n  const { token, user } = isAuthenticated() ? isAuthenticated() : null;\r\n  const { _id, email, name, phone } = user;\r\n  const fetchE = async (catId) => {\r\n    try {\r\n      const res = await fetch(`${API}/expense/list/${catId}/${_id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n\r\n      });\r\n      const data = await res.json();\r\n      setExpense(\r\n        data.map((expense) => {\r\n          return expense;\r\n        })\r\n      );\r\n      total_expense = expense.map(item => item.amount).reduce((prev, curr) => prev + curr, 0)\r\n\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const listExpense = async (userId, token) => {\r\n      try {\r\n        const cat_res = await fetch(`${API}/category/${userId}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n\r\n        });\r\n        const all_cat = await cat_res.json();\r\n        const id_cat = all_cat.map((cat) => cat._id);\r\n\r\n        id_cat.forEach((id) => fetchE(id));\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    };\r\n    listExpense(_id, token);\r\n  }, []);\r\n\r\n  return (\r\n    <Layout className=\"d-flex align-items-center\">\r\n      <div className=\"container card text-center flex\">\r\n        <div className=\"card-header\">Welcome {name}</div>\r\n        <div className=\"card-body\">\r\n          <h6 className=\"card-text\">\r\n            {\" \"}\r\n            Email : {email} &emsp; &emsp; Phone : {phone}\r\n          </h6>\r\n          <p className=\"card-text\"></p>\r\n        </div>\r\n        {/* <div className=\"card-footer text-muted\">Total Expense: {total_expense}</div>\r\n        <div className=\"card-footer text-muted\">Total Income: {total_income}</div> */}\r\n\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Layout from \"./Layout\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Category = () => {\r\n    const [category, setCategory] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const whole_user_id = isAuthenticated() ? isAuthenticated().user._id : null\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Deletion of Category Successful\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const id = isAuthenticated() ? isAuthenticated().user._id : null\r\n        const token = isAuthenticated() ? isAuthenticated().token : null\r\n\r\n        const listCategory = async (userId, token) => {\r\n            try {\r\n                const res = await fetch(`${API}/category/${userId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                const data = await res.json()\r\n                setCategory(\r\n                    data.map((cat) => {\r\n                        return cat\r\n                    })\r\n                )\r\n            } catch (err) {\r\n                setError(err)\r\n            }\r\n        }\r\n\r\n        listCategory(id, token)\r\n    }, [])\r\n\r\n    const ShowCat = ({\r\n        cat: {\r\n            cat_desc,\r\n            cat_name,\r\n            cat_type,\r\n            createdAt,\r\n            postedBy: { email, user_id },\r\n            _id,\r\n        },\r\n    }) => {\r\n        const deleteCat = async (cat_id, user_id, token) => {\r\n            try {\r\n                const res = await fetch(\r\n                    `${API}/category/${cat_id}/${user_id}`,\r\n                    {\r\n                        method: \"DELETE\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            Authorization: `Bearer ${token}`,\r\n                        },\r\n                    }\r\n                )\r\n                const data = await res.json()\r\n                if (!data) {\r\n                    setError({\r\n                        ...error,\r\n                        error: \"There is problem Deleting Category\",\r\n                    })\r\n                }\r\n                if (data) {\r\n                    setSuccess(true)\r\n                }\r\n                window.location.reload()\r\n            } catch (err) {\r\n                setError(err)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='card text-white bg-dark'>\r\n                <div\r\n                    className='card-title'\r\n                    style={{\r\n                        textTransform: \"uppercase\",\r\n                        fontSize: \"22px\",\r\n                        color: \"#d5dbed\",\r\n                        fontFamily: \"Gill Sans ,sans-serif,serif\",\r\n                    }}\r\n                >\r\n                    {cat_name}\r\n                </div>\r\n                <div\r\n                    className='card-body'\r\n                    style={{ margin: \"0px\", padding: \"0px\" }}\r\n                >\r\n                    <p\r\n                        className='card-text'\r\n                        style={{ color: \"#d5dbed\", fontFamily: \"cursive\" }}\r\n                    >\r\n                        Type : {cat_type}{\" \"}\r\n                    </p>\r\n                    <p\r\n                        className='card-text'\r\n                        style={{ color: \"#d5dbed\", fontFamily: \"cursive\" }}\r\n                    >\r\n                        Description : {cat_desc}\r\n                    </p>\r\n                </div>\r\n                <div style={{ flex: 1, flexDirection: \"row\" }}>\r\n                    <Link\r\n                        className='btn btn-danger btn-md'\r\n                        onClick={() => {\r\n                            deleteCat(\r\n                                _id,\r\n                                whole_user_id,\r\n                                isAuthenticated().token\r\n                            )\r\n                        }}\r\n                        style={{\r\n                            flex: 1,\r\n                            flexDirection: \"row\",\r\n                            backgroundColor: \"#b02a2a\",\r\n                            margin: \"15px\",\r\n                        }}\r\n                    >\r\n                        Delete Category\r\n                    </Link>\r\n                    <Link\r\n                        className='btn btn-danger btn-md'\r\n                        to={`/category/update/${_id}/${whole_user_id}`}\r\n                        style={{\r\n                            flex: 1,\r\n                            flexDirection: \"row\",\r\n                            backgroundColor: \"#b02a2a\",\r\n                            margin: \"15px\",\r\n                        }}\r\n                    >\r\n                        Update Category\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const id = isAuthenticated() ? isAuthenticated().user._id : null\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <div className='row' style={{ textAlign: \"center\" }}>\r\n                    <div className='col-12'>\r\n                        <div\r\n                            className='row center'\r\n                            style={{ textAlign: \"center\" }}\r\n                        >\r\n                            {category.map((c, i) => (\r\n                                <div\r\n                                    key={i}\r\n                                    className='col-4 mb-5'\r\n                                    style={{ padding: \"50px\" }}\r\n                                >\r\n                                    <ShowCat cat={c} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {showSuccess()}\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div>{error}</div>\r\n                {category.length && (\r\n                    <Link\r\n                        className='btn btn-primary btn-lg'\r\n                        id='button'\r\n                        style={{\r\n                            position: \"flex\",\r\n                            flexWrap: \"wrap\",\r\n                            alignContent: \"center\",\r\n                            alignItems: \"flex-end\",\r\n                        }}\r\n                        to={`/category/create/${id}`}\r\n                    >\r\n                        Create Category\r\n                    </Link>\r\n                )}\r\n                {!category.length && (\r\n                    <Link\r\n                        className='btn btn-primary btn-lg'\r\n                        id='button'\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            // top:\"50%\",\r\n                            bottom:\"10\",\r\n                            flexWrap: \"wrap\",\r\n                            alignContent: \"center\",\r\n                            alignItems: \"flex-end\",\r\n                        }}\r\n                        to={`/category/create/${id}`}\r\n                    >\r\n                        Create Category\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Category\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { isAuthenticated } from \"../auth\"\r\nimport { API } from \"../config\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport \"../core/style.css\"\r\n\r\nconst Expense = () => {\r\n    const [expense, setExpense] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const id = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n\r\n    const fetchE = async (catId) => {\r\n        try {\r\n            const res = await fetch(`${API}/expense/list/${catId}/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            const data = await res.json()\r\n            setExpense(\r\n                data.map((expense) => {\r\n                    return expense\r\n                })\r\n            )\r\n        } catch (err) {\r\n            setError(err)\r\n        }\r\n    }\r\n\r\n    const deleteCat = async (_id, cat_id, user_id, token) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/expense/${_id}/${cat_id}/${user_id}`,\r\n                {\r\n                    method: \"DELETE\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                }\r\n            )\r\n            const data = await res.json()\r\n            if (!data) {\r\n                setError({\r\n                    ...error,\r\n                    error: \"There is problem Deleting Category\",\r\n                })\r\n            }\r\n            if (data) {\r\n                setSuccess(true)\r\n            }\r\n            window.location.reload()\r\n        } catch (err) {\r\n            setError(err)\r\n        }\r\n    }\r\n\r\n    const ShowExpense = ({ e }) => {\r\n        return (\r\n            <tr>\r\n                <th scope='row'>{e.trans_title}</th>\r\n                <td>{e.amount}</td>\r\n                <Moment format={\"YYYY/MM/DD\"}>{e.trans_date}</Moment>\r\n                <td>{e.trans_desc}</td>\r\n                <td>\r\n                <Link\r\n                        className='btn btn-warning btn-md'\r\n                        to={`/expense/${e._id}/${e.cat_type._id}/${e.postedBy._id}`}\r\n                        style={{ flex: 1, flexDirection: \"row\" }}\r\n                    >\r\n                        Update Expense\r\n                    </Link>\r\n                </td>\r\n                <td>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-danger'\r\n                        onClick={() => {\r\n                            deleteCat(\r\n                                e._id,\r\n                                e.cat_type._id,\r\n                                isAuthenticated().user._id,\r\n                                isAuthenticated().token\r\n                            )\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Deletion of Category Successful\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const listExpense = async (userId, token) => {\r\n            try {\r\n                const cat_res = await fetch(`${API}/category/${userId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                const all_cat = await cat_res.json()\r\n                const id_cat = all_cat.map((cat) => cat._id)\r\n\r\n                id_cat.forEach((id) => fetchE(id))\r\n            } catch (err) {\r\n                setError(err)\r\n            }\r\n        }\r\n\r\n        listExpense(id, token)\r\n    }, [])\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <div className='row' style={{ textAlign: \"center\" }}>\r\n                    <div className='col-12'>\r\n                        <div className='center' style={{ textAlign: \"center\" }}>\r\n                            <table className='table container'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope='col'>Expense name</th>\r\n                                        <th scope='col'>Amount</th>\r\n                                        <th scope='col'>Date</th>\r\n                                        <th scope='col'>Description</th>\r\n                                        <th scope='col'>Update</th>\r\n                                        <th scope='col'>Delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {expense.map((e, i) => (\r\n                                        <ShowExpense e={e} />\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        {showSuccess()}\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div>{error}</div>\r\n\r\n                <Link\r\n                    className='btn btn-primary btn-lg center'\r\n                    style={{ textAlign: \"center\" }}\r\n                    to={`/expense/create/${id}`}\r\n                    id=\"exp_button\"\r\n                >\r\n                    Add expense\r\n                </Link>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Expense\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { isAuthenticated } from \"../auth\"\r\nimport { API } from \"../config\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport \"../core/style.css\"\r\n\r\nconst Income = () => {\r\n    const [income, setIncome] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const id = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n\r\n    const fetchE = async (catId) => {\r\n        try {\r\n            const res = await fetch(`${API}/income/list/${catId}/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            const data = await res.json()\r\n            setIncome(\r\n                data.map((income) => {\r\n                    return income\r\n                })\r\n            )\r\n        } catch (err) {\r\n            setError(err)\r\n        }\r\n    }\r\n\r\n    const deleteCat = async (_id, cat_id, user_id, token) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/income/${_id}/${cat_id}/${user_id}`,\r\n                {\r\n                    method: \"DELETE\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                }\r\n            )\r\n            const data = await res.json()\r\n            if (!data) {\r\n                setError({\r\n                    ...error,\r\n                    error: \"There is problem Deleting Category\",\r\n                })\r\n            }\r\n            if (data) {\r\n                setSuccess(true)\r\n            }\r\n            window.location.reload()\r\n        } catch (err) {\r\n            setError(err)\r\n        }\r\n    }\r\n\r\n    const ShowIncome = ({ e }) => {\r\n        return (\r\n            <tr>\r\n                <th scope='row'>{e.trans_title}</th>\r\n                <td>{e.amount}</td>\r\n                <Moment format={\"YYYY/MM/DD\"} >{e.trans_date}</Moment>\r\n                <td>{e.trans_desc}</td>\r\n                <td>\r\n                <Link\r\n                        className='btn btn-warning btn-md'\r\n                        to={`/income/${e._id}/${e.cat_type._id}/${e.postedBy._id}`}\r\n                        style={{ flex: 1, flexDirection: \"row\" }}\r\n                    >\r\n                        Update Income\r\n                    </Link>\r\n                </td>\r\n                <td>\r\n                    <button\r\n                        type='button'\r\n                        className='btn btn-danger'\r\n                        onClick={() => {\r\n                            deleteCat(\r\n                                e._id,\r\n                                e.cat_type._id,\r\n                                isAuthenticated().user._id,\r\n                                isAuthenticated().token\r\n                            )\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Deletion of Income Successful\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const listIncome = async (userId, token) => {\r\n            try {\r\n                const cat_res = await fetch(`${API}/category/${userId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                const all_cat = await cat_res.json()\r\n                const id_cat = all_cat.map((cat) => cat._id)\r\n\r\n                id_cat.forEach((id) => fetchE(id))\r\n            } catch (err) {\r\n                setError(err)\r\n            }\r\n        }\r\n\r\n        listIncome(id, token)\r\n    }, [])\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <div className='row' style={{ textAlign: \"center\" }}>\r\n                    <div className='col-12'>\r\n                        <div className='center' style={{ textAlign: \"center\" }}>\r\n                            <table className='table container'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope='col'>income name</th>\r\n                                        <th scope='col'>Amount</th>\r\n                                        <th scope='col'>Date</th>\r\n                                        <th scope='col'>Description</th>\r\n                                        <th scope='col'>Update</th>\r\n                                        <th scope='col'>Delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {income.map((e, i) => (\r\n                                        <ShowIncome e={e} />\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        {showSuccess()}\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div>{error}</div>\r\n\r\n                <Link\r\n                    className='btn btn-primary btn-lg center'\r\n                    style={{ textAlign: \"center\" }}\r\n                    to={`/income/create/${id}`}\r\n                    id=\"exp_button\"\r\n                >\r\n                    Add Income\r\n                </Link>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Income\r\n","import React, { useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\nimport { Dropdown } from \"react-bootstrap\"\r\n\r\nconst CreateCategory = (props) => {\r\n    const userId = props.match.params.userId\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [list, setList] = useState(\"\")\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        desc: \"\",\r\n        error: \"\",\r\n        success: false,\r\n    })\r\n\r\n    const { name, desc, error, success } = values\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const handleTypeList = (ty) => (event) => {\r\n        setList(ty)\r\n    }\r\n\r\n    const createCategory = async (userId, token, type, { name, desc }) => {\r\n        try {\r\n            const res = await fetch(`${API}/category/create/${userId}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    cat_name: name,\r\n                    cat_type: type,\r\n                    cat_desc: desc,\r\n                }),\r\n            })\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: \"\",\r\n                    desc: \"\",\r\n                    error: \"\",\r\n                    success: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createCategory(userId, token, list, { name, desc })\r\n    }\r\n\r\n    const categoryForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Create category.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='nameCategory'>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"name\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='name'\r\n                                                            autoComplete='name'\r\n                                                            placeholder='Real estate'\r\n                                                            value={name}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <Dropdown>\r\n                                                            <Dropdown.Toggle\r\n                                                                variant='secondary'\r\n                                                                id='dropdown-basic'\r\n                                                            >\r\n                                                                Type\r\n                                                            </Dropdown.Toggle>\r\n\r\n                                                            <Dropdown.Menu>\r\n                                                                <Dropdown.Item\r\n                                                                    onClick={handleTypeList(\r\n                                                                        \"expense\"\r\n                                                                    )}\r\n                                                                >\r\n                                                                    Expense\r\n                                                                </Dropdown.Item>\r\n                                                                <Dropdown.Item\r\n                                                                    onClick={handleTypeList(\r\n                                                                        \"income\"\r\n                                                                    )}\r\n                                                                >\r\n                                                                    Income\r\n                                                                </Dropdown.Item>\r\n                                                                <Dropdown.Item\r\n                                                                    onClick={handleTypeList(\r\n                                                                        \"both\"\r\n                                                                    )}\r\n                                                                >\r\n                                                                    Both\r\n                                                                </Dropdown.Item>\r\n                                                            </Dropdown.Menu>\r\n                                                        </Dropdown>\r\n\r\n                                                        <div\r\n                                                            className='form-control'\r\n                                                            value={list}\r\n                                                        >\r\n                                                            {list}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='desc'\r\n                                                            autoComplete='desc'\r\n                                                            placeholder='information about cat'\r\n                                                            value={desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                New category is created click to view{\" \"}\r\n                <Link to='/category'>Category</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {categoryForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CreateCategory\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Layout from \"./Layout\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst UpdateCategory = (props) => {\r\n    const userId = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const catId = props.match.params.categoryId\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        desc: \"\",\r\n        type: \"\",\r\n        error: \"\",\r\n        success: false,\r\n        redirect: false,\r\n    })\r\n\r\n    const { name, desc, type, error, success, redirect } = values\r\n\r\n    const init = (catId, userId, token) => {\r\n        const getCategory = (catId, userId, token) => {\r\n            return fetch(`${API}/category/${catId}/${userId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .catch((err) => console.error(err))\r\n        }\r\n\r\n        getCategory(catId, userId, token, token).then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    name: data.cat_name,\r\n                    desc: data.cat_desc,\r\n                    type: data.cat_type,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(catId, userId, token)\r\n    }, [])\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createCategory = async (userId, token, { name, desc, type }) => {\r\n        try {\r\n            const res = await fetch(`${API}/category/${catId}/${userId}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    cat_name: name,\r\n                    cat_type: type,\r\n                    cat_desc: desc,\r\n                }),\r\n            })\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: \"\",\r\n                    desc: \"\",\r\n                    error: \"\",\r\n                    success: true,\r\n                    redirect: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createCategory(userId, token, { name, desc, type })\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirect) {\r\n            if (!error) {\r\n                return <Redirect to='/category' />\r\n            }\r\n        }\r\n    }\r\n\r\n    const categoryForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Update category.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='nameCategory'>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"name\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='name'\r\n                                                            name='name'\r\n                                                            autoComplete='name'\r\n                                                            placeholder='Real estate'\r\n                                                            value={name}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category Type\r\n                                                        </label>\r\n                                                        <select\r\n                                                            className='form-control'\r\n                                                            name='type'\r\n                                                            onChange={handleChange(\r\n                                                                \"type\"\r\n                                                            )}\r\n                                                            value={type}\r\n                                                        >\r\n                                                            <option>\r\n                                                                Please select\r\n                                                            </option>\r\n                                                            <option value='income'>\r\n                                                                income\r\n                                                            </option>\r\n                                                            <option value='expense'>\r\n                                                                expense\r\n                                                            </option>\r\n                                                            <option value='both'>\r\n                                                                both\r\n                                                            </option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='desc'\r\n                                                            autoComplete='desc'\r\n                                                            placeholder='information about cat'\r\n                                                            value={desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Update\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Category Updated.. click to view{\" \"}\r\n                <Link to='/category'>Category</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {categoryForm()} \r\n            {redirectUser()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UpdateCategory\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { isAuthenticated } from \"./index\"\r\n\r\nconst PrivateRoute = ({component: Component, ...rest }) => (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                isAuthenticated() ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/signin\",\r\n                            state: { from: props.location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        ></Route>\r\n    )\r\n\r\nexport default PrivateRoute\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst CreateExpense = (props) => {\r\n    const userId = props.match.params.userId\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [cat, setCat] = useState([])\r\n    const [values, setValues] = useState({\r\n        amount: 0,\r\n        trans_title: \"\",\r\n        trans_desc: \"\",\r\n        trans_date: new Date(),\r\n        cat_id: \"\",\r\n        error: \"\",\r\n        success: false,\r\n    })\r\n\r\n    const {\r\n        amount,\r\n        trans_title,\r\n        trans_desc,\r\n        trans_date,\r\n        cat_id,\r\n        error,\r\n        success,\r\n    } = values\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createExpense = async (\r\n        userId,\r\n        token,\r\n        { amount, trans_title, trans_desc, trans_date, cat_id }\r\n    ) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/expense/create/${cat_id}/${userId}`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        trans_title,\r\n                        trans_desc,\r\n                        trans_date,\r\n                        amount,\r\n                    }),\r\n                }\r\n            )\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    trans_title: \"\",\r\n                    trans_desc: \"\",\r\n                    trans_date: new Date(),\r\n                    amount: 0,\r\n                    error: \"\",\r\n                    success: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createExpense(userId, token, {\r\n            amount,\r\n            trans_title,\r\n            trans_desc,\r\n            trans_date,\r\n            cat_id,\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        return fetch(`${API}/category/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n    const SelectCategory = () => {\r\n        return (\r\n            <div>\r\n                <select\r\n                    className='form-control'\r\n                    name='cat_id'\r\n                    value={cat_id}\r\n                    onChange={handleChange(\"cat_id\")}\r\n                >\r\n                    <option>Please select</option>\r\n                    {cat &&\r\n                        cat.map((c, i) => (\r\n                            <option key={i} name={c.cat_name} value={c._id}>\r\n                                {c.cat_name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const isExpense = (cat) => {\r\n        if (cat.cat_type === \"expense\" || cat.cat_type === \"both\") {\r\n            return cat\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategories().then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\" })\r\n            } else {\r\n                setCat(data.filter(isExpense))\r\n\r\n                // if (data.cat_type === \"expense\" || data.cat_type === \"both\") {\r\n                // setCat(data)\r\n                // }\r\n            }\r\n        })\r\n    }, [values])\r\n\r\n    const categoryForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Create Expense.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='amount'>\r\n                                                            Expense amount\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"amount\"\r\n                                                            )}\r\n                                                            type='number'\r\n                                                            className='form-control'\r\n                                                            id='amount'\r\n                                                            placeholder='amount of transaction'\r\n                                                            value={amount}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_title'>\r\n                                                            Expense title\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_title\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='trans_title'\r\n                                                            placeholder='Car'\r\n                                                            value={trans_title}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <SelectCategory />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_date'>\r\n                                                            Date of transaction\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_date\"\r\n                                                            )}\r\n                                                            type='date'\r\n                                                            className='form-control'\r\n                                                            id='trans_date'\r\n                                                            autoComplete='trans_date'\r\n                                                            value={trans_date}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='trans_desc'\r\n                                                            autoComplete='trans_desc'\r\n                                                            placeholder='information about expense'\r\n                                                            value={trans_desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                New expense is created click to view{\" \"}\r\n                <Link to='/expense'>Expense</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showInfo = () => {\r\n        return <div>cat_id:{cat_id}</div>\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {showInfo()}\r\n            {showError()}\r\n            {showSuccess()}\r\n            {categoryForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CreateExpense\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst UpdateExpense = (props) => {\r\n    const userId = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const catId = props.match.params.catId\r\n    const trans_id = props.match.params.trans_id\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [cat, setCat] = useState([])\r\n    const [values, setValues] = useState({\r\n        amount: 0,\r\n        trans_title: \"\",\r\n        trans_desc: \"\",\r\n        trans_date: new Date(),\r\n        cat_id: \"\",\r\n        error: \"\",\r\n        success: false,\r\n        redirect: false,\r\n    })\r\n\r\n    const {\r\n        amount,\r\n        trans_title,\r\n        trans_desc,\r\n        trans_date,\r\n        cat_id,\r\n        error,\r\n        success,\r\n        redirect,\r\n    } = values\r\n\r\n    const init = (userId, trans_id, token) => {\r\n        const getCategory = (userId, token) => {\r\n            return fetch(`${API}/expense/${trans_id}/${userId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .catch((err) => console.error(err))\r\n        }\r\n\r\n        getCategory(userId, token, token).then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                // populate the state\r\n                console.log(\"data get \", data)\r\n                let d = new Date(data.trans_date)\r\n                d = d.toISOString().substring(0, 10)\r\n                setValues({\r\n                    ...values,\r\n                    trans_title: data.trans_title,\r\n                    trans_desc: data.trans_desc,\r\n                    trans_date: d,\r\n                    amount: data.amount,\r\n                    cat_id: data.cat_type,\r\n                })\r\n                console.log(\"data set \", values)\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        return fetch(`${API}/category/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n    const isExpense = (cat) => {\r\n        if (cat.cat_type === \"expense\" || cat.cat_type === \"both\") {\r\n            return cat\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(userId, trans_id, token)\r\n        getCategories().then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\" })\r\n            } else {\r\n                setCat(data.filter(isExpense))\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createExpense = async (\r\n        userId,\r\n        token,\r\n        { amount, trans_title, trans_desc, trans_date, cat_id }\r\n    ) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/expense/${trans_id}/${catId}/${userId}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        trans_title: trans_title,\r\n                        trans_desc: trans_desc,\r\n                        trans_date: trans_date,\r\n                        amount: amount,\r\n                    }),\r\n                }\r\n            )\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    amount: 0,\r\n                    trans_title: \"\",\r\n                    trans_desc: \"\",\r\n                    trans_date: new Date(),\r\n                    cat_id: \"\",\r\n                    success: true,\r\n                    redirect: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createExpense(userId, token, {\r\n            amount,\r\n            trans_title,\r\n            trans_desc,\r\n            trans_date,\r\n            cat_id,\r\n        })\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirect) {\r\n            if (!error) {\r\n                return <Redirect to='/expense' />\r\n            }\r\n        }\r\n    }\r\n\r\n    const SelectCategory = () => {\r\n        return (\r\n            <div>\r\n                <select\r\n                    className='form-control'\r\n                    name='cat_id'\r\n                    value={cat_id}\r\n                    onChange={handleChange(\"cat_id\")}\r\n                >\r\n                    <option>Please select</option>\r\n                    {cat &&\r\n                        cat.map((c, i) => (\r\n                            <option key={i} name={c.cat_name} value={c._id}>\r\n                                {c.cat_name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const expenseForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Update Expense.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='amount'>\r\n                                                            Expense amount\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"amount\"\r\n                                                            )}\r\n                                                            type='number'\r\n                                                            className='form-control'\r\n                                                            id='amount'\r\n                                                            placeholder='amount of transaction'\r\n                                                            value={amount}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_title'>\r\n                                                            Expense title\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_title\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='trans_title'\r\n                                                            placeholder='Car'\r\n                                                            value={trans_title}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <SelectCategory />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_date'>\r\n                                                            Date of transaction\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_date\"\r\n                                                            )}\r\n                                                            type='date'\r\n                                                            className='form-control'\r\n                                                            id='trans_date'\r\n                                                            autoComplete='trans_date'\r\n                                                            value={trans_date}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='trans_desc'\r\n                                                            autoComplete='trans_desc'\r\n                                                            placeholder='information about expense'\r\n                                                            value={trans_desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Expense Updated.. click to view{\" \"}\r\n                <Link to='/expense'>Expense</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {expenseForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UpdateExpense\r\n","import React, { useEffect, useState } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst CreateIncome = (props) => {\r\n    const userId = props.match.params.userId\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [cat, setCat] = useState([])\r\n    const [values, setValues] = useState({\r\n        amount: 0,\r\n        trans_title: \"\",\r\n        trans_desc: \"\",\r\n        trans_date: new Date(),\r\n        cat_id: \"\",\r\n        error: \"\",\r\n        success: false,\r\n    })\r\n\r\n    const {\r\n        amount,\r\n        trans_title,\r\n        trans_desc,\r\n        trans_date,\r\n        cat_id,\r\n        error,\r\n        success,\r\n    } = values\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createExpense = async (\r\n        userId,\r\n        token,\r\n        { amount, trans_title, trans_desc, trans_date, cat_id }\r\n    ) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/income/create/${cat_id}/${userId}`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        trans_title,\r\n                        trans_desc,\r\n                        trans_date,\r\n                        amount,\r\n                    }),\r\n                }\r\n            )\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    trans_title: \"\",\r\n                    trans_desc: \"\",\r\n                    trans_date: new Date(),\r\n                    amount: 0,\r\n                    error: \"\",\r\n                    success: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createExpense(userId, token, {\r\n            amount,\r\n            trans_title,\r\n            trans_desc,\r\n            trans_date,\r\n            cat_id,\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        return fetch(`${API}/category/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n    const SelectCategory = () => {\r\n        return (\r\n            <div>\r\n                <select\r\n                    className='form-control'\r\n                    name='cat_id'\r\n                    value={cat_id}\r\n                    onChange={handleChange(\"cat_id\")}\r\n                >\r\n                    <option>Please select</option>\r\n                    {cat &&\r\n                        cat.map((c, i) => (\r\n                            <option key={i} name={c.cat_name} value={c._id}>\r\n                                {c.cat_name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const isExpense = (cat) => {\r\n        if (cat.cat_type === \"income\" || cat.cat_type === \"both\") {\r\n            return cat\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategories().then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\" })\r\n            } else {\r\n                setCat(data.filter(isExpense))\r\n\r\n                // if (data.cat_type === \"expense\" || data.cat_type === \"both\") {\r\n                // setCat(data)\r\n                // }\r\n            }\r\n        })\r\n    }, [values])\r\n\r\n    const categoryForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Create Income.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='amount'>\r\n                                                            Income amount\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"amount\"\r\n                                                            )}\r\n                                                            type='number'\r\n                                                            className='form-control'\r\n                                                            id='amount'\r\n                                                            placeholder='amount of transaction'\r\n                                                            value={amount}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_title'>\r\n                                                            Income title\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_title\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='trans_title'\r\n                                                            placeholder='Car'\r\n                                                            value={trans_title}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <SelectCategory />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_date'>\r\n                                                            Date of transaction\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_date\"\r\n                                                            )}\r\n                                                            type='date'\r\n                                                            className='form-control'\r\n                                                            id='trans_date'\r\n                                                            autoComplete='trans_date'\r\n                                                            value={trans_date}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='trans_desc'\r\n                                                            autoComplete='trans_desc'\r\n                                                            placeholder='information about expense'\r\n                                                            value={trans_desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                New income is created click to view{\" \"}\r\n                <Link to='/income'>Income</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showinfo = () => {\r\n        return <div>cat_id:{cat_id}</div>\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {/* {showinfo()} */}\r\n            {showError()}\r\n            {showSuccess()}\r\n            {categoryForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CreateIncome\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Layout from \"../core/Layout\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { API } from \"../config\"\r\nimport { isAuthenticated } from \"../auth\"\r\n\r\nconst UpdateIncome = (props) => {\r\n    const userId = isAuthenticated() ? isAuthenticated().user._id : null\r\n    const catId = props.match.params.catId\r\n    const trans_id = props.match.params.trans_id\r\n    const token = isAuthenticated() ? isAuthenticated().token : null\r\n    const [cat, setCat] = useState([])\r\n    const [values, setValues] = useState({\r\n        amount: 0,\r\n        trans_title: \"\",\r\n        trans_desc: \"\",\r\n        trans_date: new Date(),\r\n        cat_id: \"\",\r\n        error: \"\",\r\n        success: false,\r\n        redirect: false,\r\n    })\r\n\r\n    const {\r\n        amount,\r\n        trans_title,\r\n        trans_desc,\r\n        trans_date,\r\n        cat_id,\r\n        error,\r\n        success,\r\n        redirect,\r\n    } = values\r\n\r\n    const init = (userId, trans_id, token) => {\r\n        const getCategory = (userId, token) => {\r\n            return fetch(`${API}/income/${trans_id}/${userId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .catch((err) => console.error(err))\r\n        }\r\n\r\n        getCategory(userId, token, token).then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                // populate the state\r\n                console.log(\"data get \", data)\r\n                let d = new Date(data.trans_date)\r\n                d = d.toISOString().substring(0, 10)\r\n                setValues({\r\n                    ...values,\r\n                    trans_title: data.trans_title,\r\n                    trans_desc: data.trans_desc,\r\n                    trans_date: d,\r\n                    amount: data.amount,\r\n                    cat_id: data.cat_type,\r\n                })\r\n                console.log(\"data set \", trans_title,cat_id)\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        return fetch(`${API}/category/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .catch((err) => console.error(err))\r\n    }\r\n\r\n    const isIncome = (cat) => {\r\n        if (cat.cat_type === \"income\" || cat.cat_type === \"both\") {\r\n            return cat\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(userId, trans_id, token)\r\n        getCategories().then((data) => {\r\n            if (!data) {\r\n                setValues({ ...values, error: \"error\" })\r\n            } else {\r\n                setCat(data.filter(isIncome))\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const createIncome = async (\r\n        userId,\r\n        token,\r\n        { amount, trans_title, trans_desc, trans_date, cat_id }\r\n    ) => {\r\n        try {\r\n            const res = await fetch(\r\n                `${API}/income/${trans_id}/${catId}/${userId}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        trans_title: trans_title,\r\n                        trans_desc: trans_desc,\r\n                        trans_date: trans_date,\r\n                        amount: amount,\r\n                    }),\r\n                }\r\n            )\r\n            const data = await res.json()\r\n\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error,\r\n                    success: false,\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    amount: 0,\r\n                    trans_title: \"\",\r\n                    trans_desc: \"\",\r\n                    trans_date: new Date(),\r\n                    cat_id: \"\",\r\n                    success: true,\r\n                    redirect: true,\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        createIncome(userId, token, {\r\n            amount,\r\n            trans_title,\r\n            trans_desc,\r\n            trans_date,\r\n            cat_id,\r\n        })\r\n    }\r\n\r\n    const redirectUser = () => {\r\n        if (redirect) {\r\n            if (!error) {\r\n                return <Redirect to='/income' />\r\n            }\r\n        }\r\n    }\r\n\r\n    const SelectCategory = () => {\r\n        return (\r\n            <div>\r\n                <select\r\n                    className='form-control'\r\n                    name='cat_id'\r\n                    onChange={handleChange(\"cat_id\")}\r\n                    value={cat_id}\r\n                >\r\n                    <option>Please select</option>\r\n                    {cat &&\r\n                        cat.map((c, i) => (\r\n                            <option key={i} name={c.cat_name} value={c._id}>\r\n                                {c.cat_name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const incomeForm = () => {\r\n        return (\r\n            <div className='main-wrapper'>\r\n                <div className='page-wrapper full-page'>\r\n                    <div className='page-content d-flex align-items-center justify-content-center'>\r\n                        <div className='row w-100 mx-0 auth-page'>\r\n                            <div className='col-md-8 col-xl-6 mx-auto'>\r\n                                <div className='card'>\r\n                                    <div className='row'>\r\n                                        <div className='col-md-4 pr-md-0'>\r\n                                            <div className='auth-left-wrapper'></div>\r\n                                        </div>\r\n                                        <div className='col-md-8 pl-md-0'>\r\n                                            <div className='auth-form-wrapper px-4 py-5'>\r\n                                                <Link\r\n                                                    to='/'\r\n                                                    className='noble-ui-logo d-block mb-2'\r\n                                                >\r\n                                                    Expense<span>Manager</span>\r\n                                                </Link>\r\n                                                <h5 className='text-muted font-weight-normal mb-4'>\r\n                                                    Update Income.\r\n                                                </h5>\r\n                                                <form className='forms-sample'>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='amount'>\r\n                                                            Income amount\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"amount\"\r\n                                                            )}\r\n                                                            type='number'\r\n                                                            className='form-control'\r\n                                                            id='amount'\r\n                                                            placeholder='amount of transaction'\r\n                                                            value={amount}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_title'>\r\n                                                            Income title\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_title\"\r\n                                                            )}\r\n                                                            type='text'\r\n                                                            className='form-control'\r\n                                                            id='trans_title'\r\n                                                            placeholder='Car'\r\n                                                            value={trans_title}\r\n                                                            required\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label>\r\n                                                            Category name\r\n                                                        </label>\r\n                                                        <SelectCategory />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_date'>\r\n                                                            Date of transaction\r\n                                                        </label>\r\n                                                        <input\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_date\"\r\n                                                            )}\r\n                                                            type='date'\r\n                                                            className='form-control'\r\n                                                            id='trans_date'\r\n                                                            autoComplete='trans_date'\r\n                                                            value={trans_date}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='form-group'>\r\n                                                        <label htmlFor='trans_desc'>\r\n                                                            Description\r\n                                                        </label>\r\n                                                        <textarea\r\n                                                            onChange={handleChange(\r\n                                                                \"trans_desc\"\r\n                                                            )}\r\n                                                            className='form-control'\r\n                                                            id='trans_desc'\r\n                                                            autoComplete='trans_desc'\r\n                                                            placeholder='information about income'\r\n                                                            value={trans_desc}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className='mt-3'>\r\n                                                        <button\r\n                                                            type='submit'\r\n                                                            className='btn btn-primary mr-2 mb-2 mb-md-0'\r\n                                                            onClick={\r\n                                                                clickSubmit\r\n                                                            }\r\n                                                        >\r\n                                                            Submit and Create\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-danger'\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        return (\r\n            <div\r\n                className='alert alert-fill-success'\r\n                style={{ display: success ? \"\" : \"none\" }}\r\n            >\r\n                Income Updated.. click to view{\" \"}\r\n                <Link to='/income'>Income</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {showError()}\r\n            {showSuccess()}\r\n            {incomeForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UpdateIncome\r\n","import React from \"react\"\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\nimport Signup from \"./user/Signup.js\"\r\nimport Signin from \"./user/Signin.js\"\r\nimport Home from \"./core/Home.js\"\r\nimport Category from \"./core/Category\"\r\nimport Expense from \"./Expense/Expense\"\r\nimport Income from \"./Income/Income\"\r\nimport CreateCategory from \"./core/CreateCategory\"\r\nimport UpdateCategory from \"./core/UpdateCategory\"\r\nimport { isAuthenticated } from \"./auth\"\r\nimport PrivateRoute  from \"./auth/PrivateRoute.js\"\r\nimport CreateExpense from './Expense/CreateExpense'\r\nimport UpdateExpense from './Expense/UpdateExpense'\r\nimport CreateIncome from './Income/CreateIncome'\r\nimport UpdateIncome from './Income/UpdateIncome'\r\n\r\nconst Routes = () => {\r\n    const handelLogin = (e) => {\r\n        return isAuthenticated() ? true : false\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path='/signin' exact component={Signin} />\r\n                <Route path='/signup' exact component={Signup} />\r\n                <PrivateRoute path='/' exact component={Home} />\r\n                <PrivateRoute\r\n                    path='/category'\r\n                    handelLogin={handelLogin}\r\n                    exact\r\n                    component={Category}\r\n                />\r\n                <PrivateRoute\r\n                    path='/category/create/:userId'\r\n                    handelLogin={handelLogin}\r\n                    exact\r\n                    component={CreateCategory}\r\n                />\r\n                <PrivateRoute\r\n                    path='/category/update/:categoryId/:userId'\r\n                    handelLogin={handelLogin}\r\n                    exact\r\n                    component={UpdateCategory}\r\n                />\r\n                <PrivateRoute path='/expense' exact component={Expense} />\r\n                <PrivateRoute path='/expense/create/:userId' exact component={CreateExpense} />\r\n                <PrivateRoute path='/expense/:trans_id/:catId/:userId' exact component={UpdateExpense} />\r\n                <PrivateRoute path='/income' exact component={Income} />\r\n                <PrivateRoute path='/income/create/:userId' exact component={CreateIncome} />\r\n                <PrivateRoute path='/income/:trans_id/:catId/:userId' exact component={UpdateIncome} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\nimport 'bootstrap/dist/css/bootstrap.min.css' \n\nReactDOM.render(\n    <Routes />,\n  document.getElementById('root')\n);"],"sourceRoot":""}